[{"D:\\testgit\\framework_client-server\\client\\src\\index.js":"1","D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js":"2","D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js":"3","D:\\testgit\\framework_client-server\\client\\src\\App.js":"4","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js":"5","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js":"6","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js":"7","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\AdminPage.js":"8","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Body.js":"9","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Header.js":"10","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js":"11","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js":"12","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js":"13","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js":"14","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js":"15","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js":"16","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js":"17","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js":"18","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js":"19","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js":"20","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js":"21","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js":"22","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js":"23","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Test.js":"24","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js":"25","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js":"26","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Profile.js":"27","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js":"28","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js":"29","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Account.js":"30","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Movie.js":"31","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Advertisement.js":"32","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js":"33","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theaters.js":"34","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theater_room.js":"35","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Screening.js":"36","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Tickets.js":"37","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js":"38","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\AddNew.js":"39","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\News.js":"40","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js":"41","D:\\testgit\\framework_client-server\\client\\src\\Config.js":"42","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js":"43","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js":"44","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\test.js":"45","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Home.js":"46","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Footer.js":"47","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\MovieDetail.js":"48","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\BookTicket.js":"49","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\BookTicketbyMovie.js":"50"},{"size":368,"mtime":1610990919255,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"52"},{"size":433,"mtime":1609018386481,"results":"54","hashOfConfig":"52"},{"size":1750,"mtime":1616998127068,"results":"55","hashOfConfig":"52"},{"size":392,"mtime":1610921243633,"results":"56","hashOfConfig":"52"},{"size":219,"mtime":1610682954531,"results":"57","hashOfConfig":"52"},{"size":530,"mtime":1612568698979,"results":"58","hashOfConfig":"52"},{"size":775,"mtime":1616654479286,"results":"59","hashOfConfig":"52"},{"size":3062,"mtime":1617048972816,"results":"60","hashOfConfig":"52"},{"size":3528,"mtime":1617047415414,"results":"61","hashOfConfig":"52"},{"size":289,"mtime":1609020037560,"results":"62","hashOfConfig":"52"},{"size":288,"mtime":1610682911758,"results":"63","hashOfConfig":"52"},{"size":160,"mtime":1610682892144,"results":"64","hashOfConfig":"52"},{"size":598,"mtime":1612568683285,"results":"65","hashOfConfig":"52"},{"size":2044,"mtime":1616658094830,"results":"66","hashOfConfig":"52"},{"size":1349,"mtime":1616658586156,"results":"67","hashOfConfig":"52"},{"size":1073,"mtime":1610168167118,"results":"68","hashOfConfig":"52"},{"size":2175,"mtime":1610168373837,"results":"69","hashOfConfig":"52"},{"size":1465,"mtime":1616474013701,"results":"70","hashOfConfig":"52"},{"size":1077,"mtime":1609111136612,"results":"71","hashOfConfig":"52"},{"size":465,"mtime":1609108283541,"results":"72","hashOfConfig":"52"},{"size":4387,"mtime":1610989673026,"results":"73","hashOfConfig":"52"},{"size":168,"mtime":1610905774429,"results":"74","hashOfConfig":"52"},{"size":960,"mtime":1610513003342,"results":"75","hashOfConfig":"52"},{"size":5424,"mtime":1616997543729,"results":"76","hashOfConfig":"52"},{"size":1489,"mtime":1610168165574,"results":"77","hashOfConfig":"52"},{"size":8017,"mtime":1616821214416,"results":"78","hashOfConfig":"52"},{"size":1101,"mtime":1616476319448,"results":"79","hashOfConfig":"52"},{"size":2006,"mtime":1612472441211,"results":"80","hashOfConfig":"52"},{"size":4038,"mtime":1616661838470,"results":"81","hashOfConfig":"52"},{"size":4320,"mtime":1617030221467,"results":"82","hashOfConfig":"52"},{"size":306,"mtime":1616570339235,"results":"83","hashOfConfig":"52"},{"size":2950,"mtime":1616727330344,"results":"84","hashOfConfig":"52"},{"size":6273,"mtime":1616876420089,"results":"85","hashOfConfig":"52"},{"size":8620,"mtime":1616922351060,"results":"86","hashOfConfig":"52"},{"size":10574,"mtime":1617137713572,"results":"87","hashOfConfig":"52"},{"size":3512,"mtime":1616948791444,"results":"88","hashOfConfig":"52"},{"size":489,"mtime":1609056594023,"results":"89","hashOfConfig":"52"},{"size":686,"mtime":1616572744758,"results":"90","hashOfConfig":"52"},{"size":7054,"mtime":1616957833823,"results":"91","hashOfConfig":"52"},{"size":17263,"mtime":1617025593731,"results":"92","hashOfConfig":"52"},{"size":458,"mtime":1616474279705,"results":"93","hashOfConfig":"52"},{"size":4530,"mtime":1617029991212,"results":"94","hashOfConfig":"52"},{"size":1111,"mtime":1616726555635,"results":"95","hashOfConfig":"52"},{"size":6361,"mtime":1616827138313,"results":"96","hashOfConfig":"52"},{"size":4544,"mtime":1617047213346,"results":"97","hashOfConfig":"52"},{"size":1839,"mtime":1617031025955,"results":"98","hashOfConfig":"52"},{"size":2149,"mtime":1617125100642,"results":"99","hashOfConfig":"52"},{"size":2383,"mtime":1617122597936,"results":"100","hashOfConfig":"52"},{"size":1363,"mtime":1617146994492,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"155qdx3",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":19,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\testgit\\framework_client-server\\client\\src\\index.js",[],["220","221"],"D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js",[],"D:\\testgit\\framework_client-server\\client\\src\\App.js",["222","223","224","225","226"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport BodyUser from './components/UserPage/LandingPage/Body'\r\nimport NavHeader from './components/UserPage/LandingPage/Header'\r\n\r\nimport {BrowserRouter as Router,useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {fetchUser,dispatchGetUser,dispatchLogin} from './redux/actions/authAction'\r\nimport {fetchAllUsers,dispatchGetAllUser} from './redux/actions/allUserAction'\r\nimport AdminPage from './components/AdminPage/AdminPage'\r\n\r\n\r\nfunction App() {\r\n//const \r\nconst dispatch = useDispatch()\r\nconst history = useHistory()\r\nconst token = useSelector(state => state.token)\r\nconst auth = useSelector(state => state.auth)\r\nconst {isLogged,isAdmin} = auth\r\n\r\n\r\nconst getToken = async()=>{\r\n  const res = await axios.post('/user/refresh_token',null)\r\n  dispatch({type:'GET_TOKEN',payload: res.data.access_token})\r\n}\r\n\r\nconst getUser = async() =>{\r\n  return fetchUser(token).then(res =>{\r\n    dispatch(dispatchGetUser(res))\r\n  })\r\n}\r\n\r\n\r\n//effect\r\nuseEffect(()=>{\r\n  const firstLogin = localStorage.getItem('firstLogin')\r\n  if(firstLogin){\r\n    getToken()\r\n    dispatch(dispatchLogin())\r\n  }\r\n},[isLogged])\r\n\r\nuseEffect(()=>{\r\n  if(token) getUser()\r\n},[token])\r\n\r\nuseEffect(()=>{\r\n  if(isAdmin){\r\n    fetchAllUsers(token,auth).then(res =>{\r\n      dispatch(dispatchGetAllUser(res))\r\n    })\r\n  }\r\n},[isAdmin])\r\n\r\n\r\n//render\r\n  return (\r\n    <div>\r\n      <Router>\r\n        {\r\n          isAdmin?<div className=\"body-admin\">\r\n          <div>\r\n            <AdminPage/>\r\n          </div>\r\n        </div>\r\n          :\r\n          <div>\r\n              <BodyUser/>\r\n          </div>\r\n        }\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\AdminPage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Body.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Header.js",["227","228","229","230","231"],"import React,{useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport logo from '../../../access/images/Logo.png';  \r\nimport {UpOutlined} from '@ant-design/icons';  \r\nimport {BackTop , Menu, Dropdown} from 'antd';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Button\r\n  } from 'reactstrap';\r\nimport LeftMenu from './LeftMenu'\r\nimport { Drawer } from 'antd';\r\nimport Login from '../../auth/Login'\r\n\r\n\r\n\r\n\r\n\r\nfunction NavHeader() {\r\n    //const\r\n    const auth = useSelector(state => state.auth)\r\n    const {user,isLogged} = auth;\r\n    const [visible, setvisible] = useState(false)\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n    const handleLogin =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\">\r\n            <a href=\"/profile\">Profile</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <label onClick={handleLogout}>Logout</label>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const userInfor = () =>{\r\n        return <Dropdown overlay={menu} trigger={['click']}>\r\n            <div>\r\n                <label className='user'>    \r\n                <img alt='' src={user.avatar}/>\r\n                {user.name}\r\n                </label>\r\n            </div>\r\n    </Dropdown>\r\n    }\r\n\r\n    //\r\n\r\n\r\n    // Render\r\n    return (\r\n        <div className='header'>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <img alt='logo' src={logo}/>\r\n            FRadar</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n\r\n          <Nav className=\"mr-auto\" navbar>\r\n          <NavItem>\r\n              <NavLink href=\"/bookticket\">Book Ticket</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/news\">News</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              {/* <DropdownToggle nav caret>\r\n                Movie theaters\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                <NavLink href=\"/intheaters/sap-chieu\">Up comming</NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                <NavLink href=\"/intheaters/dang-chieu\">Now Play</NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu> */}\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          {isLogged?userInfor()\r\n          :\r\n          <div><Button onClick={handleLogin}>login</Button>\r\n                <Drawer\r\n                    title=\"Login\"\r\n                    placement=\"right\"\r\n                    onClose={handleLogin}\r\n                    visible={visible}>\r\n                    <Login/>\r\n                </Drawer>\r\n          </div>\r\n          \r\n          }\r\n        </Collapse>\r\n      </Navbar>\r\n        <BackTop>\r\n          <Button className='backtop'>UP</Button>\r\n        </BackTop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavHeader\r\n","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js",["232","233","234","235","236","237","238","239"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport { Menu} from 'antd';\r\nimport {PoweroffOutlined,\r\n    VideoCameraOutlined,\r\n    BankOutlined,\r\n    TableOutlined,\r\n    PlayCircleOutlined,\r\n    BarcodeOutlined,\r\n    FundOutlined,\r\n    FundViewOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nfunction LeftMenu() {\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu style={{height:\"100vh\"}} theme=\"dark\" mode=\"inline\">\r\n                    <div className='user-Admin'>{user.name}</div>\r\n                    <Menu.Item key=\"account\" icon={<UserOutlined />}><a href='/account'/>Account</Menu.Item>\r\n                    <Menu.Item key=\"movies\" icon={<VideoCameraOutlined />}><a href='/movies'/>Movies</Menu.Item>\r\n                    <Menu.Item key=\"theaters\" icon={<BankOutlined />}><a href='/theaters'/>Theaters</Menu.Item>\r\n                    <Menu.Item key=\"theaters-room\" icon={<TableOutlined />}><a href='/theaters-room'/>Theaters Room</Menu.Item>\r\n                    <Menu.Item key=\"screening\" icon={<PlayCircleOutlined />}><a href='/screening'/>Screening</Menu.Item>\r\n                    <Menu.Item key=\"tickets\" icon={<BarcodeOutlined />}><a href='/tickets'/>Tickets</Menu.Item>\r\n                    <Menu.Item key=\"news\" icon={<FundOutlined />}><a href='/news'/>News</Menu.Item>\r\n                    <Menu.Item key=\"advertisement\" icon={<FundViewOutlined />}><a href='/advertisement'/>Advertisement</Menu.Item>\r\n                <Menu.Item onClick={handleLogout} key=\"logout\" icon={<PoweroffOutlined />}>\r\n                    Logout\r\n                    </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftMenu\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js",["240","241","242"],"import React from 'react'\r\nimport '../AdminPage.css'\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Account from '../Body/Account'\r\nimport Movie from '../Body/Movie'\r\nimport Theaters from '../Body/Theaters'\r\nimport News from '../Body/News'\r\nimport Theater_room from '../Body/Theater_room'\r\nimport Screening from '../Body/Screening'\r\nimport Tickets from '../Body/Tickets'\r\nimport Advertisement from '../Body/Advertisement'\r\nimport AddNew from '../Body/AddNew'\r\nimport AddNewMovie from '../Body/commons/AddNewMovie'\r\n\r\nfunction Body() {\r\n    return (\r\n        <div>\r\n            <section>\r\n                <Switch>\r\n                    {/* must login first */}\r\n                    <Route exact path=\"/account\" component={Account}/>\r\n                    <Route exact path=\"/movies\" component={Movie}/>\r\n                    <Route exact path=\"/theaters\" component={Theaters}/>\r\n                    <Route exact path=\"/theaters-room\" component={Theater_room}/>\r\n                    <Route exact path=\"/screening\" component={Screening}/>\r\n                    <Route exact path=\"/tickets\" component={Tickets}/>\r\n                    <Route exact path=\"/news\" component={News}/>\r\n                    <Route exact path=\"/\" component={Account}/>\r\n                </Switch>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js",["243"],"import React, {useState} from 'react'\r\n\r\nimport { Menu,Button} from 'antd';\r\nimport {\r\n  AppstoreOutlined,\r\n  HomeOutlined,\r\n  HeartOutlined,\r\n  FastForwardOutlined,\r\n  MenuOutlined,\r\n} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction LeftMenu() {\r\n\r\n  const [collapsed, setcollapsed] = useState(true)\r\n\r\n    return (\r\n\r\n      <div className='left-menu'>\r\n            <Button\r\n                onClick={()=>{setcollapsed (!collapsed)}}\r\n                style={{width:'100%'}}>\r\n                < MenuOutlined/>\r\n            </Button>\r\n      <div>\r\n          <Menu\r\n            defaultSelectedKeys={['home']}\r\n            mode=\"inline\"\r\n            theme=\"light\"\r\n            inlineCollapsed = {collapsed}\r\n          >\r\n            <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n            <a href='/'>Home</a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"favorite\" icon={<HeartOutlined />}>\r\n            <a href=\"/favorite\">Favorite</a>\r\n            </Menu.Item>\r\n            <SubMenu key=\"In Theaters\" icon={<AppstoreOutlined />} title=\"In Theaters\">\r\n              <Menu.Item key=\"up-comming\">\r\n              <a href=\"/intheaters/sap-chieu\">Up Comming</a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"now-playing\">\r\n              <a href=\"/intheaters/dang-chieu\">Now Playing</a>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n      </div>\r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LeftMenu\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Test.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Profile.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Account.js",["244","245","246","247","248"],"import React ,{useState,useEffect}from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { Table,Typography,message,Drawer,Modal,Input ,Button} from 'antd';\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport {fetchAllUsers,dispatchGetAllUser} from '../../../redux/actions/allUserAction'\r\nimport Information from './commons/Information'\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    email:'',\r\n    name:'',\r\n    avatar:'',\r\n}\r\n\r\nfunction Account() {\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n        \r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const users = useSelector(state => state.users)\r\n    const [userView, setuserView] = useState(users)\r\n    const [userInfor, setuserInfor] = useState(initialState)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [searching, setsearching] = useState(0)\r\n     //const \r\n     const columns = [\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n    \r\n      const handleSearch = (e) =>{\r\n        if(e.target.value==='')\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        users.forEach(element => {\r\n            if(element.name.toLowerCase().search(e.target.value) != -1 || element.email.toLowerCase().search(e.target.value) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setuserView(count)\r\n      }\r\n\r\n      const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/user/delete/${userInfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + userInfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchAllUsers(token).then(res =>{\r\n            dispatch(dispatchGetAllUser(res))\r\n          })\r\n      },[dispatch,token])\r\n      \r\n\r\n    //render\r\n    return (\r\n        <div className='body-container' >\r\n            <h2><Text underline>User Manager</Text></h2>\r\n            <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n            <Table columns={columns}  scroll={{ y: 450 }} pagination={{ pageSize: users.length }} dataSource={searching==0?users:userView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                  onClick: event => {setuserInfor(searching==0?users[rowIndex]:userView[rowIndex])}, // click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information account infor ={userInfor} />\r\n            </Drawer>\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete}>\r\n                <p>Delete User?</p>\r\n            </Modal>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Movie.js",["249","250","251","252"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Drawer,Table,Modal,message,Input,Button} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport Information from './commons/Information'\r\nimport AddNewMovie from './commons/AddNewMovie'\r\n\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    original_title:'',\r\n    overview:'',\r\n    poster_path:'',\r\n    backdrop_path:'',\r\n    _id:'',\r\n    directors:[],\r\n    actors:[],\r\n    trailer:'',\r\n}\r\n\r\nfunction Movie() {\r\n    \r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [moviesView, setmoviesView] = useState(Movies)\r\n    const [movieinfor, setmovieinfor] = useState(initialState)\r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [searching, setsearching] = useState(0)\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: '_Id',\r\n          dataIndex: '_id',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'original_title',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                     <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n\r\n    useEffect(() => {\r\n        movies_eff()\r\n    }, [])\r\n\r\n    const movies_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/movie/getallmovie')\r\n            setMovies(res.data.movie)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/movie/delete/${movieinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + movieinfor.original_title, 0);\r\n            setTimeout(hide, 2500);\r\n            movies_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        Movies.forEach(element => {\r\n            if(element.title.toLowerCase().search(str) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setmoviesView(count);\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n           <h2><Text underline>Movies Manager</Text></h2>\r\n           <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n           <Table columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: Movies.length }} dataSource={searching==0?Movies:moviesView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                    onClick: event => {setmovieinfor(searching==0?Movies[rowIndex]:moviesView[rowIndex])}, // click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            {/* information */}\r\n           <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information movie infor= {movieinfor}/>\r\n            </Drawer>\r\n\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                <p>Delete Movie?</p>\r\n            </Modal>\r\n\r\n            </div>\r\n            <div className=\"new-movie\">\r\n                <AddNewMovie/>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Advertisement.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js",["253","254","255","256","257","258","259"],"import React ,{useState,useEffect}from 'react'\r\nimport { API_URL, API_KEY,LANGUAGE ,IMAGE_BASE_URL,POSTER_SIZE} from '../../../../Config'\r\nimport { Row, Col,Input,Button, Radio ,Modal} from 'antd';\r\nimport axios from 'axios'\r\nimport InformationMovie from './InformationMovie'\r\nimport MovieCard from './MovieCard'\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nfunction AddNewMovie() {\r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [search, setsearch] = useState(false)\r\n    const [visible, setvisible] = useState(false)\r\n\r\n    //Effect\r\n    useEffect(() => {\r\n        if(search== false)\r\n            fetcMovies()\r\n    },[search])\r\n\r\n    const fetcMovies = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMovieTheaters', {url:'https://moveek.com/sap-chieu/'})\r\n            setMovies(res.data.movies)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const handleSearch = async(props) =>{\r\n        if(!props){\r\n            return\r\n        }\r\n        setsearch(true)\r\n        const escapedValue = encodeURIComponent(props).replace('%20','+');\r\n            try {\r\n                const res = await axios.get('/movie/searchthemoviedb', {headers:{key:escapedValue}})\r\n                setMovies(res.data.movies)\r\n            } catch (err) {\r\n               return err.response.data.msg\r\n            }\r\n\r\n    }\r\n\r\n    const handleChange = async(props) =>{\r\n        if(props.target.value === \"\"){\r\n            setsearch(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className= 'AddNewMovie'>\r\n            <div style={{margin:'auto',padding:'10px'}}>\r\n                <Search style={{width:'50%'}}\r\n                    placeholder=\"Name Movie\"\r\n                    allowClear\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onSearch={handleSearch}\r\n                    onChange={handleChange}\r\n                    />\r\n                    <Button style={{float:'right'}} onClick={handleAdd}>Custom</Button>\r\n            </div>\r\n\r\n            <div className='movie-search'>\r\n            <Row gutter={[8, 16]}>\r\n                {Movies && Movies.map((movie, index) => (\r\n                                <React.Fragment key={index}>\r\n                                     <Col span={4} >\r\n                                        <div>\r\n                                            <MovieCard movie={movie}/>\r\n                                        </div>\r\n                                     </Col>\r\n                                </React.Fragment>\r\n                            ))}\r\n            </Row>\r\n            </div>\r\n            <Modal title=\"Basic Modal\" visible={visible} onOk={handleAdd} onCancel={handleAdd}>\r\n                <InformationMovie custom/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewMovie\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theaters.js",["260","261","262","263"],"import React,{useState,useEffect} from 'react'\r\nimport {Drawer,Typography,Table,Modal,message,Input,Form,Button} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { SettingOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { Text} = Typography;\r\nconst initialState ={\r\n    id:'',\r\n    name:'',\r\n    address:'',\r\n}\r\n\r\nfunction Theaters() {\r\n\r\n     //const\r\n     const [theater, settheater] = useState([])\r\n     const token = useSelector(state => state.token)\r\n     const [theaterView, settheaterView] = useState([])\r\n     const [isModalVisible, setIsModalVisible] = useState(false);\r\n     const [searching, setsearching] = useState(0)\r\n     const [theaterinfor, settheaterinfor] = useState(initialState)\r\n     const [visible, setvisible] = useState(false)\r\n     const [addnew, setaddnew] = useState(false)\r\n\r\n     const handleEdit =() =>{\r\n        setvisible (!visible)\r\n            if(visible) setaddnew(false)\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Address',\r\n          dataIndex: 'address',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <DeleteOutlined onClick={Deletehandle}/> <SettingOutlined id=\"setting\" onClick={handleEdit}/>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n      useEffect(() => {\r\n        theater_eff()\r\n    }, [])\r\n\r\n    const theater_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/theater/get_alltheater',{headers:{Authorization:token}})\r\n            settheater(res.data.theater)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        theater.forEach(element => {\r\n            if(element.name.toLowerCase().search(str) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        settheaterView(count);\r\n      }\r\n\r\n\r\n      const Settinghandle = async (e) =>{\r\n            if(addnew)\r\n            try {\r\n                await axios.post(`/theater/addtheater`,{name:e.name,address:e.address},\r\n                {headers:{Authorization:token}\r\n                })\r\n                localStorage.setItem('updatePage',true)\r\n                theater_eff();\r\n                \r\n            } catch (error) {\r\n                return;\r\n            }\r\n            else\r\n            try {\r\n\r\n                await axios.post(`/theater/updatetheater`,{id:theaterinfor._id,name:e.name,address:e.address},\r\n                {headers:{Authorization:token}\r\n                })\r\n                localStorage.setItem('updatePage',true)\r\n                theater_eff();\r\n            } catch (error) {\r\n                return;\r\n            }\r\n\r\n      }\r\n\r\n\r\n      const handleAdd= async (e) =>{\r\n        try {\r\n            setaddnew(true)\r\n            handleEdit()\r\n        } catch (error) {\r\n            return;\r\n        }\r\n\r\n  }\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/theater/deletetheater/${theaterinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + theaterinfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n            theater_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n                <h2><Text underline>Theaters Manager</Text></h2>\r\n                    <Button style={{width:\"10%\",float:'left'}} size=\"large\" onClick={handleAdd}>Add</Button>\r\n                    <Input style={{width:\"30%\",float:'right'}} size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n                <Table columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: theater.length }} dataSource={searching==0?theater:theaterView}\r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {settheaterinfor(searching==0?theater[rowIndex]:theaterView[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n\r\n                    {/* information */}\r\n                    <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                        <p>Delete Theater?</p>\r\n                    </Modal>\r\n\r\n                    <Drawer\r\n                    width={'30%'}\r\n                    title=\"Information\"\r\n                    placement=\"right\"\r\n                    visible={visible}\r\n                    onClose={handleEdit}\r\n                    >\r\n                        <Form  onFinish={Settinghandle}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Please input theater name!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Address\"\r\n                            name=\"address\"\r\n                            rules={[{ required: true, message: 'Please input theater address!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form>\r\n                </Drawer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Theaters\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theater_room.js",["264","265","266","267","268"],"import React,{useState,useEffect} from 'react'\r\nimport {Drawer,Typography,Table,Modal,message,Input,Form,Button, InputNumber,Select} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { SettingOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nconst { Option } = Select;\r\n\r\nconst { Text} = Typography;\r\nconst initialState ={\r\n    id:'',\r\n    name:'',\r\n    address:'',\r\n}\r\n\r\nfunction Theater_room() {\r\n\r\n     //const\r\n     const [results, setresults] = useState([])\r\n     const [theater, settheater] = useState([])\r\n     const token = useSelector(state => state.token)\r\n     const [view, setview] = useState([])\r\n     const [isModalVisible, setIsModalVisible] = useState(false);\r\n     const [searching, setsearching] = useState(0)\r\n     const [viewinfor, setviewinfor] = useState(initialState)\r\n     const [visible, setvisible] = useState(false)\r\n     const [addnew, setaddnew] = useState(false)\r\n\r\n     const handleEdit =() =>{\r\n        setvisible (!visible)\r\n            if(visible) setaddnew(false)\r\n\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Index',\r\n          dataIndex: 'index',\r\n\r\n          \r\n        },\r\n\r\n        {\r\n            title: 'Theater',\r\n            children: [\r\n              {\r\n                title: 'theater Name',\r\n                dataIndex: 'theaterId',\r\n                key: 'theaterId',\r\n                render: result =><div>{result.name}</div>\r\n              },\r\n              {\r\n                title: 'theater Address',\r\n                dataIndex: 'theaterId',\r\n                key: 'theaterAddress',\r\n                render: result =><div>{result.address}</div>\r\n              },\r\n            ],\r\n          },\r\n\r\n        {\r\n            title: 'matrix_chair',\r\n            dataIndex: 'matrix_chair',\r\n            key:\"matrix_chair\",\r\n            render: result =><div>{result[0]*result[1]}</div>\r\n          },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <DeleteOutlined onClick={Deletehandle}/> <SettingOutlined id=\"setting\" onClick={handleEdit}/>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n      useEffect(() => {\r\n        theaterRoom_eff()\r\n        theater_eff()\r\n    }, [])\r\n\r\n    const theaterRoom_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/theater/theater_room/getinfor_allroom',{headers:{Authorization:token}})\r\n            setresults(res.data.theater_room)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const theater_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/theater/get_alltheater',{headers:{Authorization:token}})\r\n            settheater(res.data.theater)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        results.forEach(element => {\r\n            if(element.theaterId.name.toLowerCase().search(str) != -1\r\n            || element.theaterId.address.toLowerCase().search(str) != -1\r\n            || element.index === parseInt(str)\r\n            ){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setview(count);\r\n      }\r\n\r\n\r\n      const Settinghandle = async (e) =>{\r\n            if(addnew)\r\n            try {\r\n\r\n                const res = await axios.post(`/theater/theater_room/addtheater_room`,{theaterId:e.theater,index:e.index,matrix_chair:[e.height,e.width]},\r\n                {headers:{Authorization:token}\r\n                })\r\n                message.success(res.data.msg)\r\n                localStorage.setItem('updatePage',true)\r\n                theaterRoom_eff();\r\n                \r\n            } catch (error) {\r\n                message.warning(\"not add\")\r\n            }\r\n            else\r\n            try {\r\n\r\n                const res = await axios.post(`/theater/theater_room/updatetheater_room`,{id:viewinfor._id,theaterId:e.theater,index:e.index,matrix_chair:[e.height,e.width]},\r\n                {headers:{Authorization:token}\r\n                })\r\n\r\n                message.success(res.data.msg)\r\n                localStorage.setItem('updatePage',true)\r\n                theaterRoom_eff();\r\n            } catch (error) {\r\n                message.warning(\"not update\")\r\n            }\r\n\r\n      }\r\n\r\n\r\n      const handleAdd= async (e) =>{\r\n        try {\r\n            setaddnew(true)\r\n            handleEdit()\r\n        } catch (error) {\r\n            return;\r\n        }\r\n\r\n  }\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/theater/theater_room/deletetheater_room/${viewinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + viewinfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n            theaterRoom_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n                <h2><Text underline>Theaters Manager</Text></h2>\r\n                    <Button style={{width:\"10%\",float:'left'}} size=\"large\" onClick={handleAdd}>Add</Button>\r\n                    <Input style={{width:\"30%\",float:'right'}} size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n                <Table columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: results.length }} dataSource={searching==0?results:view}\r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {setviewinfor(searching==0?results[rowIndex]:view[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n\r\n                    {/* information */}\r\n                    <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                        <p>Delete Theater?</p>\r\n                    </Modal>\r\n\r\n                    <Drawer\r\n                    width={'30%'}\r\n                    title=\"Information\"\r\n                    placement=\"right\"\r\n                    visible={visible}\r\n                    onClose={handleEdit}\r\n                    >\r\n                        <Form  onFinish={Settinghandle}>\r\n                        <Form.Item\r\n                            label=\"Index\"\r\n                            name=\"index\"\r\n                            rules={[{ required: true, message: 'Please input Index!' }]}\r\n                        >\r\n                            <InputNumber min={1}/>\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                label=\"width Chair\"\r\n                                name=\"width\">\r\n                                <InputNumber min={1}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"height Chair\"\r\n                                name=\"height\">\r\n                                <InputNumber min={1}/>\r\n                            </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Theater\"\r\n                            name=\"theater\"\r\n                            rules={[{ required: true, message: 'Please input theater!' }]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Select a option and change input text above\"\r\n                                allowClear\r\n                            >\r\n                                {theater.map(item => (\r\n                                    <Option key={item._id}>{item.name}</Option>\r\n                                    ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form>\r\n                </Drawer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Theater_room\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Screening.js",["269","270","271","272","273","274","275"],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Tickets.js",["276","277","278","279"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Table,Input} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { Text} = Typography;\r\n\r\nfunction Tickets() {\r\n\r\n     //const\r\n     const [results, setresults] = useState([])\r\n     const token = useSelector(state => state.token)\r\n     const [view, setview] = useState([])\r\n     const [searching, setsearching] = useState(0)\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Customer',\r\n            dataIndex: 'UserId',\r\n            key:'UserId',\r\n            render: result =><div>{result.name}</div>\r\n          },\r\n\r\n        {\r\n            title: 'Location seats',\r\n            children: [\r\n            {\r\n                title: 'vertical',\r\n                dataIndex: 'number_seat',\r\n                key: 'vertical',\r\n                render: result =><div>{result[0]+1}</div>\r\n            },\r\n            {\r\n                title: 'horizontal',\r\n                dataIndex: 'number_seat',\r\n                key: 'horizontal',\r\n                render: result =><div>{result[1]+1}</div>\r\n            },\r\n            ],\r\n        },\r\n\r\n        {\r\n            title: 'Theater',\r\n            children: [\r\n              {\r\n                title: 'Room index',\r\n                dataIndex: 'ScreeningId',\r\n                key: 'Room_index',\r\n                render: result =><div>{result.theater_RoomId.index}</div>\r\n              },\r\n              {\r\n                title: 'Theater',\r\n                dataIndex: 'ScreeningId',\r\n                key:\"Theater\",\r\n                render: result =><div>{result.theater_RoomId.theaterId.name}</div>\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            title: 'Start',\r\n            dataIndex: 'ScreeningId',\r\n            key:'start',\r\n            render: result =><div>{result.time_start}</div>\r\n          },\r\n        \r\n        {\r\n            title: 'Movie',\r\n            dataIndex: 'ScreeningId',\r\n            key:'movie',\r\n            render: result =><div>{result.MovieId.title}</div>\r\n          },\r\n      ];\r\n\r\n      useEffect(() => {\r\n          Ticket_eff()\r\n    }, [])\r\n\r\n    const Ticket_eff = async(e) =>{\r\n        try{\r\n            const res = await axios.get('/theater/ticket/get_allticket',{headers:{Authorization:token}})\r\n            setresults(res.data.Ticket)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        results.forEach(element => {\r\n            if(element.UserId.name.toLowerCase().search(str) != -1\r\n            ||element.ScreeningId.MovieId.title.toLowerCase().search(str) != -1\r\n            ){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setview(count);\r\n      }     \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n                <h2><Text underline>Tickets Manager</Text></h2>\r\n                    <Input style={{width:\"30%\",float:'right'}} size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n                <Table bordered={true} columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: results.length }} dataSource={searching==0?results:view}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tickets\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\AddNew.js",["280"],"import React from 'react'\r\nimport {Typography,Form, Input, Button, Checkbox } from 'antd';\r\n\r\n\r\nconst { Text} = Typography;\r\n\r\nfunction AddNew() {\r\n    return (\r\n        <div className='body-container'>\r\n        <h2><Text underline>Add new</Text></h2>\r\n        <Form\r\n            name=\"basic\"\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AddNew\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\News.js",["281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Table,Modal,message,Input,Button,Drawer,Form} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { SettingOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { Text} = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction News() {\r\n\r\n     //const\r\n     const writer = useSelector(state => state.auth.user._id)\r\n     const [listNews, setlistNews] = useState([])\r\n     const [results, setresults] = useState([])\r\n     const token = useSelector(state => state.token)\r\n     const [view, setview] = useState([])\r\n     const [isModalVisible, setIsModalVisible] = useState(false);\r\n     const [searching, setsearching] = useState(0)\r\n     const [newsclick, setnewsclick] = useState()\r\n     const [viewinfor, setviewinfor] = useState()\r\n     const [visible, setvisible] = useState(false)\r\n     const [addnew, setaddnew] = useState(false)\r\n\r\n     const handleEdit =() =>{\r\n        setvisible (!visible)\r\n            if(visible) setaddnew(false)\r\n\r\n    }\r\n\r\n\r\n    const ColumnsList = [\r\n        {\r\n            dataIndex: 'img',\r\n            width:\"120px\",\r\n            render: result =><img src={result}/> \r\n          },\r\n        {\r\n          dataIndex: '',\r\n          width:\"75%\",\r\n          render: result =><div><a style={{color:'black'}} href={result.description}>{result.description}</a>\r\n          \r\n            <div style={{color:'gray'}}>{result.source} - {result.time} </div>\r\n          </div>\r\n\r\n        },\r\n\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                   <Button onClick={Addnew}>Add</Button>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'description',\r\n          dataIndex: 'description',\r\n          width:\"25%\",\r\n        },\r\n\r\n        {\r\n            title: 'Infomation',\r\n            children: [\r\n              {\r\n                title: 'source',\r\n                dataIndex: 'source',\r\n                key: 'source',\r\n              },\r\n              {\r\n                title: 'time',\r\n                dataIndex: 'time',\r\n                key:\"time\",\r\n              },\r\n              {\r\n                title: 'Writer',\r\n                dataIndex: 'WriterId',\r\n                key:'total_seats',\r\n               render: result =><div>{result.name}</div>\r\n              },\r\n              {\r\n                title: 'Original link',\r\n                dataIndex: 'link',\r\n                key:'Original_link',\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            title: 'img',\r\n            dataIndex: 'img',\r\n            render: result =><img src={result}/> \r\n          },\r\n\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <Button icon={<DeleteOutlined/>} onClick={Deletehandle}>Delete</Button>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n      useEffect(() => {\r\n        News_eff()\r\n        Get_News_eff()\r\n    }, [])\r\n\r\n    const News_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/news/get_allnews')\r\n            setresults(res.data.news)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const Get_News_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/news/getnews')\r\n            setlistNews(res.data.news)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const Addnew = async () =>{\r\n        \r\n        try {\r\n            const res = await axios.post(`/news/addnews`,{WriterId:writer,description:newsclick.description,link:newsclick.link,source:newsclick.source,time:newsclick.time,img:newsclick.img   },\r\n            {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n            localStorage.setItem('updatePage',true)\r\n            News_eff();\r\n        } catch (error) {\r\n            message.warning(\"not add\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        results.forEach(element => {\r\n            if(element.WriterId.name.toLowerCase().search(str) != -1\r\n            ||element.description.toLowerCase().search(str) != -1\r\n            ||element.source.toLowerCase().search(str) != -1\r\n            ){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setview(count);\r\n      }\r\n\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/news/deletenews/${viewinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + viewinfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n            News_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n                <h2><Text underline>News Manager</Text></h2>\r\n                    <Input style={{width:\"30%\",float:'right'}} size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n                <Table bordered={true} columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: results.length }} dataSource={searching==0?results:view}\r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {setviewinfor(searching==0?results[rowIndex]:view[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n\r\n                    {/* information */}\r\n                    <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                        <p>Delete News?</p>\r\n                    </Modal>\r\n\r\n            </div>\r\n            <div>\r\n            <h2 style={{textAlign:'center'}}><Text>Add News</Text></h2>\r\n            <Table bordered={true} columns={ColumnsList} scroll={{ y: 450 }} pagination={{ pageSize: listNews.length }} dataSource={listNews} \r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {setnewsclick(listNews[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport moment   from 'moment';\r\nimport {Skeleton,Form,Input,List,DatePicker,InputNumber,Button,message} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport './commons.css'\r\nimport ReactPlayer from 'react-player/youtube'\r\nconst { TextArea } = Input;\r\n\r\nfunction InformationMovie(props) {\r\n    const {data, custom} = props\r\n    const token = useSelector(state => state.token)\r\n    const [movie, setmovie] = useState()\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    const [posterImg, setposterImg] = useState('')\r\n    const [bannerImg, setbannerImg] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(!custom)\r\n            fetcMovies(data)\r\n    }, [data])\r\n\r\n    const fetcMovies = async(data) => {\r\n        try {\r\n            const res = await axios.get('/movie/fetchMovieDetailTheaters',{headers:{url:data.linkmovie}})\r\n            setmovie(res.data.movie)\r\n            console.log(res.data.movie)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n       \r\n    }\r\n    const formItemLayoutWithOutLabel = {\r\n        wrapperCol: {\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 20, offset: 4 },\r\n        },\r\n      };\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 14 },\r\n      };\r\n\r\n\r\n    \r\n    const uploadButton = (\r\n        <div>\r\n          <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    const Loading = (\r\n        <div>\r\n            <Skeleton.Image active={true} /> \r\n            <Skeleton active={true}/> \r\n        </div>\r\n    );\r\n    \r\n    const onFinish = async(e) =>{\r\n        try{\r\n            const res = await axios.post('/movie/addmovie/',{movie:e},\r\n                {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n\r\n    const onCustom = async(e) =>{\r\n        try{\r\n            const movie={\r\n                title:e.title,\r\n                backdrop_path:bannerImg,\r\n                directors:e.directors,\r\n                actors:e.actors,\r\n                original_title:e.original_title,\r\n                overview:e.overview,\r\n                poster_path:posterImg,\r\n                release_date:e.release_date,\r\n                run_time:e.run_time,\r\n                trailer:e.trailer,\r\n            }\r\n\r\n            const res = await axios.post('/movie/addmovie/',{movie:movie},\r\n                {headers:{Authorization:token}\r\n            })\r\n            //message.success(res.data.msg)\r\n\r\n            console.log(movie)\r\n            console.log(res.data.msg)\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n      \r\n    const upImage = async(e) =>{\r\n        e.preventDefault();\r\n        try {\r\n            const file = e.target.files[0]\r\n           if(!file) return console.error('No files were uploaded.');\r\n           if(file.type !== 'image/jpeg' && file.type !== 'image/png') return console.error('file format incorrect.');\r\n\r\n           let formData = new FormData()\r\n           formData.append('file',file)\r\n           const res = await axios.post('/api/uploadimg',formData,{\r\n               headers:{'content-type':'multipart/form-data',Authorization:token}\r\n           })\r\n\r\n           if(e.target.id==\"poster\"){\r\n                setposterImg(res.data.url)\r\n           }\r\n           if(e.target.id==\"banner\"){\r\n                setbannerImg(res.data.url)\r\n          }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    if(custom)\r\n    {\r\n        return (\r\n            <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onCustom}\r\n                        initialValues={{\r\n                            ['run-time']: 1,\r\n                            ['original_title']:\"\",\r\n                            ['title']:\"\",\r\n                            ['overview']:\"\",\r\n                            ['release_date']:\"\",\r\n                            ['backdrop_path']:\"\",\r\n                            ['directors']:\"\",\r\n                            ['actors']:\"\",\r\n                            ['trailer']:\"\",\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.List\r\n                                name=\"actors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, actors) => {\r\n                                    if (!actors || actors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 actors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Actors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"Actors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Actors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n                            <Form.List\r\n                                name=\"directors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, directors) => {\r\n                                    if (!directors || directors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 directors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Directors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"directors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Directors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img style={{height:\"300px\"}} alt=\"poster\" src={posterImg}/>\r\n                                <Input type='file' id='poster' onChange={upImage}/>\r\n                            \r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img style={{width:\"100%\"}} alt=\"banner\" src={bannerImg}/>\r\n                            <input type='file' id='banner' onChange={upImage}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n\r\n                </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div> \r\n            {movie?\r\n                <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            ['run_time']: movie.runtime?movie.runtime:1,\r\n                            ['original_title']:movie.original_title,\r\n                            ['title']:movie.title,\r\n                            ['overview']:movie.overview,\r\n                            ['release_date']:moment(movie.release_date,dateFormat),\r\n                            ['backdrop_path']:movie.backdrop_path,\r\n                            ['poster_path']:movie.poster_path,\r\n                            ['directors']:movie.directors,\r\n                            ['actors']:movie.actors,\r\n                            ['trailer']:movie.trailer,\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"directors\" label=\"Directors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                            size=\"small\"\r\n                            bordered\r\n                            dataSource={movie.directors}\r\n                            renderItem={item => <List.Item>{item}</List.Item>}\r\n                            />\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item name=\"actors\" label=\"Actors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                                size=\"small\"\r\n                                bordered\r\n                                dataSource={movie.actors}\r\n                                renderItem={item => <List.Item>{item}</List.Item>}\r\n                                />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img alt='' src = {movie.poster_path?movie.poster_path:null} style={{height:'300px'}}/>\r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <ReactPlayer width=\"100%\" height=\"100%\" url={movie.trailer} />\r\n                            </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img alt='' src = {movie.backdrop_path?movie.backdrop_path:null} style={{width:'100%'}}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n                </div>\r\n                :<div>{Loading}</div>\r\n            }\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n// }\r\n\r\nexport default InformationMovie\r\n","D:\\testgit\\framework_client-server\\client\\src\\Config.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js",["317","318","319"],"import React ,{useState}from 'react'\r\nimport { Form,Button,Input,message,DatePicker} from 'antd';\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction Information(props) {\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [check, setcheck] = useState(false)\r\n    const infor = props.infor\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 24 },\r\n      };\r\n      const dateFormat = 'YYYY/MM/DD';\r\n\r\n    const OnEditMovie =  async (values) =>{\r\n\r\n        var {original_title,release_date,overview,trailer} = values\r\n        original_title = !original_title?infor.original_title : original_title\r\n        release_date = !release_date?infor.release_date : release_date\r\n        overview = !overview?infor.overview : overview\r\n        trailer = !trailer?infor.trailer : trailer\r\n\r\n        var premiere\r\n        if(check === true)\r\n        {\r\n            await axios.post('/movie/updatemovie',{id:infor._id,premiere:-1,original_title,release_date,overview,trailer},{headers:{Authorization:token}})\r\n        }\r\n        if(check === false)\r\n            await axios.post('/movie/updatemovie',{id:infor._id,original_title,release_date,overview,trailer},{headers:{Authorization:token}})\r\n        message.success('change information successfully')\r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        setcheck(e.target.checked)\r\n    }\r\n\r\n\r\n    \r\n    // acount\r\n    if(props.account){\r\n        return (\r\n            <div className='information-user'>\r\n                <div className= 'left-infor'>\r\n                    <img alt='avatar' src={infor.avatar}/><br/>\r\n                </div>\r\n                <div>\r\n                    <Form name=\"information\"> \r\n                        <Form.Item label=\"_Id\">\r\n                            {infor._id}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Email\">\r\n                            {infor.email}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Name\">\r\n                            {infor.name}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Type Account\">\r\n                            {infor.role=== 1?<div>Admin Account</div>:<div>User Account</div>}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Date Create\">\r\n                            {infor.createdAt}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        if(props.movie)\r\n        {\r\n            return (\r\n                <div>\r\n                    <Form name=\"information\"  {...layout}  onFinish={OnEditMovie}\r\n            \r\n                    > \r\n                            <Form.Item label=\"background\">\r\n                                <img src={infor.backdrop_path}style={{top:'0',left:'0',width:'80%'}}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Poster\">\r\n                                <img src={infor.poster_path} style={{top:'0',left:'0',height:'500px'}}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Original title\" name=\"original_title\">\r\n                                <Input placeholder={infor.original_title}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"overview\" name=\"overview\">\r\n                                <TextArea  rows={4} placeholder={infor.overview}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Release date\" name=\"release_date\">\r\n                                <DatePicker format={dateFormat} placeholder={infor.release_date}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"trailer\" name=\"trailer\">\r\n                                <Input placeholder={infor.trailer}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"old movies\" name=\"old\">\r\n                                <Checkbox onChange={handleChange}/>\r\n                            </Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default Information\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js",["320","321"],"import React,{useState} from 'react'\r\nimport {Button,Modal} from 'antd';\r\nimport InformationMovie from './InformationMovie'\r\n\r\nfunction MovieCard(props) {\r\n    \r\n    const {movie} = props\r\n    const [visible, setvisible] = useState(false)\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    return (\r\n        <div className='search-detail'>\r\n            <img style={{width:'180px'}} src={movie.poster_path} onClick={handleAdd}/>\r\n            <div style={{color:'black'}}>{movie.title}</div>\r\n            <Modal\r\n                height='70%'\r\n                width=\"80%\"\r\n                title=\"Add new movies\"\r\n                placement=\"top\"\r\n                visible={visible}\r\n                title=\"Information Movie\"\r\n                closable={false}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={()=>{setvisible (false)}}>\r\n                      Close\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                <InformationMovie data = {movie}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\test.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Home.js",["322","323","324"],"import React,{useState,useEffect}from 'react'\r\nimport axios from 'axios'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { List, message, Avatar, Spin,Row,Col} from 'antd';\r\n\r\nimport './Home.css'\r\n\r\n\r\nfunction Home() {\r\n    const [comingSoon, setcomingSoon] = useState([])\r\n    const [playNow, setplayNow] = useState([])\r\n    const [News, setNews] = useState([])\r\n    const [autoPlay, setautoPlay] = useState(true)\r\n    const [movieFocus, setmovieFocus] = useState([])\r\n\r\n \r\n    useEffect(() => {\r\n        fetchData();\r\n    },[])\r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            const res = await axios.get('/movie/getplaynow')\r\n            setmovieFocus(res.data.movie[0])\r\n            setplayNow(res.data.movie);\r\n            const res2 = await axios.get('/news/get_allnews')\r\n            setNews(res2.data.news)\r\n            const res3 = await axios.get('/movie/getcomingsoon')\r\n            setcomingSoon(res3.data.movie)\r\n        } catch (err) {\r\n           return;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e)=>{\r\n        setmovieFocus(playNow[e])\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n        <div className=\"home\"> \r\n            <div className=\"list-movie\">\r\n                <Carousel verticalSwipe='natural' autoPlay={autoPlay} centerMode={true} infiniteLoop={true} onChange={handleChange}>\r\n                    {playNow && playNow.map((movie, index) => (\r\n                                        <div className=\"box\">\r\n                                            <div className=\"detail\">\r\n                                                <h2>{movie.title}</h2>\r\n                                                <p>{new Date(movie.release_date).toLocaleDateString()}</p>\r\n                                            </div>\r\n                                            <a alt=\"movie-detail\" href={`/movie/${movie._id}`}><img src={movie.poster_path} /></a>\r\n                                        </div>\r\n                                            ))}\r\n                </Carousel>\r\n\r\n                <h2> Now Playing</h2>\r\n            </div>\r\n            <div className='trailer'>\r\n                <ReactPlayer url={movieFocus.trailer} onPlay={()=>{setautoPlay(false)}} onPause={()=>{setautoPlay(true)}}/>\r\n                <div className='overview' >{movieFocus.overview}</div>\r\n            </div>\r\n            <div className=\"news\">\r\n                <List\r\n                    dataSource={News}\r\n                    renderItem={item => (\r\n                    <List.Item key={item.description}>\r\n                        <List.Item.Meta\r\n                        avatar={\r\n                            <Avatar src={item.img} />\r\n                        }\r\n                        title={<a href={item.link}>{item.description}</a>}\r\n                        description={`${item.source} - ${item.time}`}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n                >\r\n                    \r\n                </List>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className=\"coming_soon\">\r\n                <h2>Coming Soon</h2>\r\n            <Row gutter={[8, 8]}>\r\n                        {comingSoon && comingSoon.map((movie, index) => (\r\n                            <React.Fragment key={index}>\r\n                               <Col span={6} >\r\n                                   <div className='card-movie'>\r\n                                       <label>{movie.episode}</label>\r\n                                        <a href={`/movie/${movie._id}`}>\r\n                                            <img alt ='poster' src={movie.poster_path}/>\r\n                                            <div className='movie-infor'>\r\n                                                {movie.title}<p/>\r\n                                                Khởi chiếu: {new Date(movie.release_date).toLocaleDateString()}\r\n                                                </div>\r\n                                        </a>\r\n                                   </div>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                                \r\n                            </React.Fragment>\r\n                                \r\n                        ))}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Footer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\MovieDetail.js",["325","326","327","328","329","330"],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\BookTicket.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\BookTicketbyMovie.js",["331","332","333","334","335","336","337","338","339"],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":4,"column":8,"nodeType":"346","messageId":"347","endLine":4,"endColumn":17},{"ruleId":"344","severity":1,"message":"348","line":16,"column":7,"nodeType":"346","messageId":"347","endLine":16,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":41,"column":3,"nodeType":"351","endLine":41,"endColumn":13,"suggestions":"352"},{"ruleId":"349","severity":1,"message":"353","line":45,"column":3,"nodeType":"351","endLine":45,"endColumn":10,"suggestions":"354"},{"ruleId":"349","severity":1,"message":"355","line":53,"column":3,"nodeType":"351","endLine":53,"endColumn":12,"suggestions":"356"},{"ruleId":"344","severity":1,"message":"357","line":5,"column":9,"nodeType":"346","messageId":"347","endLine":5,"endColumn":19},{"ruleId":"344","severity":1,"message":"358","line":16,"column":5,"nodeType":"346","messageId":"347","endLine":16,"endColumn":19},{"ruleId":"344","severity":1,"message":"359","line":17,"column":5,"nodeType":"346","messageId":"347","endLine":17,"endColumn":17},{"ruleId":"344","severity":1,"message":"360","line":18,"column":5,"nodeType":"346","messageId":"347","endLine":18,"endColumn":17},{"ruleId":"344","severity":1,"message":"361","line":21,"column":8,"nodeType":"346","messageId":"347","endLine":21,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":33,"column":70,"nodeType":"364","endLine":33,"endColumn":90},{"ruleId":"362","severity":1,"message":"363","line":34,"column":76,"nodeType":"364","endLine":34,"endColumn":95},{"ruleId":"362","severity":1,"message":"363","line":35,"column":71,"nodeType":"364","endLine":35,"endColumn":92},{"ruleId":"362","severity":1,"message":"363","line":36,"column":77,"nodeType":"364","endLine":36,"endColumn":103},{"ruleId":"362","severity":1,"message":"363","line":37,"column":78,"nodeType":"364","endLine":37,"endColumn":100},{"ruleId":"362","severity":1,"message":"363","line":38,"column":73,"nodeType":"364","endLine":38,"endColumn":93},{"ruleId":"362","severity":1,"message":"363","line":39,"column":67,"nodeType":"364","endLine":39,"endColumn":84},{"ruleId":"362","severity":1,"message":"363","line":40,"column":80,"nodeType":"364","endLine":40,"endColumn":106},{"ruleId":"344","severity":1,"message":"365","line":11,"column":8,"nodeType":"346","messageId":"347","endLine":11,"endColumn":21},{"ruleId":"344","severity":1,"message":"366","line":12,"column":8,"nodeType":"346","messageId":"347","endLine":12,"endColumn":14},{"ruleId":"344","severity":1,"message":"367","line":13,"column":8,"nodeType":"346","messageId":"347","endLine":13,"endColumn":19},{"ruleId":"344","severity":1,"message":"368","line":8,"column":3,"nodeType":"346","messageId":"347","endLine":8,"endColumn":22},{"ruleId":"344","severity":1,"message":"369","line":4,"column":55,"nodeType":"346","messageId":"347","endLine":4,"endColumn":61},{"ruleId":"370","severity":1,"message":"371","line":54,"column":66,"nodeType":"372","messageId":"373","endLine":54,"endColumn":68},{"ruleId":"370","severity":1,"message":"371","line":54,"column":126,"nodeType":"372","messageId":"373","endLine":54,"endColumn":128},{"ruleId":"370","severity":1,"message":"374","line":102,"column":120,"nodeType":"372","messageId":"373","endLine":102,"endColumn":122},{"ruleId":"370","severity":1,"message":"374","line":105,"column":60,"nodeType":"372","messageId":"373","endLine":105,"endColumn":62},{"ruleId":"344","severity":1,"message":"369","line":2,"column":53,"nodeType":"346","messageId":"347","endLine":2,"endColumn":59},{"ruleId":"370","severity":1,"message":"371","line":99,"column":56,"nodeType":"372","messageId":"373","endLine":99,"endColumn":58},{"ruleId":"370","severity":1,"message":"374","line":116,"column":119,"nodeType":"372","messageId":"373","endLine":116,"endColumn":121},{"ruleId":"370","severity":1,"message":"374","line":119,"column":63,"nodeType":"372","messageId":"373","endLine":119,"endColumn":65},{"ruleId":"344","severity":1,"message":"375","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":17},{"ruleId":"344","severity":1,"message":"376","line":2,"column":19,"nodeType":"346","messageId":"347","endLine":2,"endColumn":26},{"ruleId":"344","severity":1,"message":"377","line":2,"column":27,"nodeType":"346","messageId":"347","endLine":2,"endColumn":35},{"ruleId":"344","severity":1,"message":"378","line":2,"column":37,"nodeType":"346","messageId":"347","endLine":2,"endColumn":51},{"ruleId":"344","severity":1,"message":"379","line":2,"column":52,"nodeType":"346","messageId":"347","endLine":2,"endColumn":63},{"ruleId":"344","severity":1,"message":"380","line":3,"column":33,"nodeType":"346","messageId":"347","endLine":3,"endColumn":38},{"ruleId":"370","severity":1,"message":"374","line":20,"column":18,"nodeType":"372","messageId":"373","endLine":20,"endColumn":20},{"ruleId":"349","severity":1,"message":"381","line":54,"column":8,"nodeType":"351","endLine":54,"endColumn":10,"suggestions":"382"},{"ruleId":"370","severity":1,"message":"371","line":72,"column":55,"nodeType":"372","messageId":"373","endLine":72,"endColumn":57},{"ruleId":"370","severity":1,"message":"374","line":147,"column":125,"nodeType":"372","messageId":"373","endLine":147,"endColumn":127},{"ruleId":"370","severity":1,"message":"374","line":150,"column":73,"nodeType":"372","messageId":"373","endLine":150,"endColumn":75},{"ruleId":"349","severity":1,"message":"383","line":81,"column":8,"nodeType":"351","endLine":81,"endColumn":10,"suggestions":"384"},{"ruleId":"370","severity":1,"message":"371","line":109,"column":65,"nodeType":"372","messageId":"373","endLine":109,"endColumn":67},{"ruleId":"370","severity":1,"message":"371","line":110,"column":68,"nodeType":"372","messageId":"373","endLine":110,"endColumn":70},{"ruleId":"370","severity":1,"message":"374","line":191,"column":125,"nodeType":"372","messageId":"373","endLine":191,"endColumn":127},{"ruleId":"370","severity":1,"message":"374","line":194,"column":70,"nodeType":"372","messageId":"373","endLine":194,"endColumn":72},{"ruleId":"344","severity":1,"message":"385","line":7,"column":9,"nodeType":"346","messageId":"347","endLine":7,"endColumn":20},{"ruleId":"349","severity":1,"message":"386","line":92,"column":8,"nodeType":"351","endLine":92,"endColumn":10,"suggestions":"387"},{"ruleId":"370","severity":1,"message":"371","line":138,"column":64,"nodeType":"372","messageId":"373","endLine":138,"endColumn":66},{"ruleId":"370","severity":1,"message":"371","line":140,"column":79,"nodeType":"372","messageId":"373","endLine":140,"endColumn":81},{"ruleId":"370","severity":1,"message":"374","line":229,"column":141,"nodeType":"372","messageId":"373","endLine":229,"endColumn":143},{"ruleId":"370","severity":1,"message":"374","line":232,"column":70,"nodeType":"372","messageId":"373","endLine":232,"endColumn":72},{"ruleId":"370","severity":1,"message":"374","line":268,"column":58,"nodeType":"372","messageId":"373","endLine":268,"endColumn":60},{"ruleId":"349","severity":1,"message":"388","line":78,"column":8,"nodeType":"351","endLine":78,"endColumn":10,"suggestions":"389"},{"ruleId":"370","severity":1,"message":"371","line":98,"column":62,"nodeType":"372","messageId":"373","endLine":98,"endColumn":64},{"ruleId":"370","severity":1,"message":"371","line":99,"column":75,"nodeType":"372","messageId":"373","endLine":99,"endColumn":77},{"ruleId":"370","severity":1,"message":"374","line":113,"column":141,"nodeType":"372","messageId":"373","endLine":113,"endColumn":143},{"ruleId":"344","severity":1,"message":"390","line":2,"column":41,"nodeType":"346","messageId":"347","endLine":2,"endColumn":49},{"ruleId":"344","severity":1,"message":"391","line":2,"column":53,"nodeType":"346","messageId":"347","endLine":2,"endColumn":59},{"ruleId":"344","severity":1,"message":"392","line":2,"column":60,"nodeType":"346","messageId":"347","endLine":2,"endColumn":64},{"ruleId":"344","severity":1,"message":"393","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":25},{"ruleId":"344","severity":1,"message":"394","line":8,"column":9,"nodeType":"346","messageId":"347","endLine":8,"endColumn":17},{"ruleId":"344","severity":1,"message":"395","line":23,"column":13,"nodeType":"346","messageId":"347","endLine":23,"endColumn":19},{"ruleId":"344","severity":1,"message":"396","line":25,"column":12,"nodeType":"346","messageId":"347","endLine":25,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":36,"column":30,"nodeType":"364","endLine":36,"endColumn":49},{"ruleId":"397","severity":1,"message":"398","line":97,"column":30,"nodeType":"364","endLine":97,"endColumn":49},{"ruleId":"370","severity":1,"message":"371","line":156,"column":64,"nodeType":"372","messageId":"373","endLine":156,"endColumn":66},{"ruleId":"370","severity":1,"message":"371","line":157,"column":61,"nodeType":"372","messageId":"373","endLine":157,"endColumn":63},{"ruleId":"370","severity":1,"message":"371","line":158,"column":56,"nodeType":"372","messageId":"373","endLine":158,"endColumn":58},{"ruleId":"370","severity":1,"message":"374","line":196,"column":141,"nodeType":"372","messageId":"373","endLine":196,"endColumn":143},{"ruleId":"370","severity":1,"message":"374","line":199,"column":70,"nodeType":"372","messageId":"373","endLine":199,"endColumn":72},{"ruleId":"349","severity":1,"message":"399","line":22,"column":8,"nodeType":"351","endLine":22,"endColumn":14,"suggestions":"400"},{"ruleId":"344","severity":1,"message":"401","line":48,"column":11,"nodeType":"346","messageId":"347","endLine":48,"endColumn":23},{"ruleId":"370","severity":1,"message":"374","line":114,"column":26,"nodeType":"372","messageId":"373","endLine":114,"endColumn":28},{"ruleId":"370","severity":1,"message":"374","line":117,"column":26,"nodeType":"372","messageId":"373","endLine":117,"endColumn":28},{"ruleId":"402","severity":1,"message":"403","line":136,"column":29,"nodeType":"404","messageId":"405","endLine":136,"endColumn":44,"fix":"406"},{"ruleId":"402","severity":1,"message":"407","line":137,"column":29,"nodeType":"404","messageId":"405","endLine":137,"endColumn":50,"fix":"408"},{"ruleId":"402","severity":1,"message":"409","line":138,"column":29,"nodeType":"404","messageId":"405","endLine":138,"endColumn":41,"fix":"410"},{"ruleId":"402","severity":1,"message":"411","line":139,"column":29,"nodeType":"404","messageId":"405","endLine":139,"endColumn":44,"fix":"412"},{"ruleId":"402","severity":1,"message":"413","line":140,"column":29,"nodeType":"404","messageId":"405","endLine":140,"endColumn":48,"fix":"414"},{"ruleId":"402","severity":1,"message":"415","line":141,"column":29,"nodeType":"404","messageId":"405","endLine":141,"endColumn":49,"fix":"416"},{"ruleId":"402","severity":1,"message":"417","line":142,"column":29,"nodeType":"404","messageId":"405","endLine":142,"endColumn":45,"fix":"418"},{"ruleId":"402","severity":1,"message":"419","line":143,"column":29,"nodeType":"404","messageId":"405","endLine":143,"endColumn":42,"fix":"420"},{"ruleId":"402","severity":1,"message":"421","line":144,"column":29,"nodeType":"404","messageId":"405","endLine":144,"endColumn":43,"fix":"422"},{"ruleId":"402","severity":1,"message":"423","line":324,"column":29,"nodeType":"404","messageId":"405","endLine":324,"endColumn":72,"fix":"424"},{"ruleId":"402","severity":1,"message":"407","line":325,"column":29,"nodeType":"404","messageId":"405","endLine":325,"endColumn":68,"fix":"425"},{"ruleId":"402","severity":1,"message":"409","line":326,"column":29,"nodeType":"404","messageId":"405","endLine":326,"endColumn":50,"fix":"426"},{"ruleId":"402","severity":1,"message":"411","line":327,"column":29,"nodeType":"404","messageId":"405","endLine":327,"endColumn":56,"fix":"427"},{"ruleId":"402","severity":1,"message":"413","line":328,"column":29,"nodeType":"404","messageId":"405","endLine":328,"endColumn":83,"fix":"428"},{"ruleId":"402","severity":1,"message":"415","line":329,"column":29,"nodeType":"404","messageId":"405","endLine":329,"endColumn":66,"fix":"429"},{"ruleId":"402","severity":1,"message":"430","line":330,"column":29,"nodeType":"404","messageId":"405","endLine":330,"endColumn":62,"fix":"431"},{"ruleId":"402","severity":1,"message":"417","line":331,"column":29,"nodeType":"404","messageId":"405","endLine":331,"endColumn":58,"fix":"432"},{"ruleId":"402","severity":1,"message":"419","line":332,"column":29,"nodeType":"404","messageId":"405","endLine":332,"endColumn":52,"fix":"433"},{"ruleId":"402","severity":1,"message":"421","line":333,"column":29,"nodeType":"404","messageId":"405","endLine":333,"endColumn":54,"fix":"434"},{"ruleId":"344","severity":1,"message":"435","line":28,"column":13,"nodeType":"346","messageId":"347","endLine":28,"endColumn":21},{"ruleId":"397","severity":1,"message":"398","line":83,"column":33,"nodeType":"364","endLine":83,"endColumn":103},{"ruleId":"397","severity":1,"message":"398","line":86,"column":33,"nodeType":"364","endLine":86,"endColumn":105},{"ruleId":"397","severity":1,"message":"398","line":15,"column":13,"nodeType":"364","endLine":15,"endColumn":87},{"ruleId":"436","severity":1,"message":"437","line":23,"column":17,"nodeType":"438","endLine":23,"endColumn":42},{"ruleId":"344","severity":1,"message":"439","line":6,"column":16,"nodeType":"346","messageId":"347","endLine":6,"endColumn":23},{"ruleId":"344","severity":1,"message":"440","line":6,"column":33,"nodeType":"346","messageId":"347","endLine":6,"endColumn":37},{"ruleId":"397","severity":1,"message":"398","line":53,"column":96,"nodeType":"364","endLine":53,"endColumn":127},{"ruleId":"344","severity":1,"message":"369","line":8,"column":10,"nodeType":"346","messageId":"347","endLine":8,"endColumn":16},{"ruleId":"349","severity":1,"message":"441","line":18,"column":7,"nodeType":"351","endLine":18,"endColumn":9,"suggestions":"442"},{"ruleId":"370","severity":1,"message":"374","line":37,"column":26,"nodeType":"372","messageId":"373","endLine":37,"endColumn":28},{"ruleId":"370","severity":1,"message":"374","line":42,"column":26,"nodeType":"372","messageId":"373","endLine":42,"endColumn":28},{"ruleId":"397","severity":1,"message":"398","line":49,"column":17,"nodeType":"364","endLine":49,"endColumn":112},{"ruleId":"397","severity":1,"message":"398","line":51,"column":17,"nodeType":"364","endLine":51,"endColumn":49},{"ruleId":"344","severity":1,"message":"369","line":2,"column":9,"nodeType":"346","messageId":"347","endLine":2,"endColumn":15},{"ruleId":"344","severity":1,"message":"443","line":6,"column":8,"nodeType":"346","messageId":"347","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"444","line":11,"column":12,"nodeType":"346","messageId":"347","endLine":11,"endColumn":20},{"ruleId":"344","severity":1,"message":"445","line":11,"column":22,"nodeType":"346","messageId":"347","endLine":11,"endColumn":33},{"ruleId":"344","severity":1,"message":"446","line":12,"column":12,"nodeType":"346","messageId":"347","endLine":12,"endColumn":15},{"ruleId":"344","severity":1,"message":"447","line":12,"column":17,"nodeType":"346","messageId":"347","endLine":12,"endColumn":23},{"ruleId":"349","severity":1,"message":"441","line":17,"column":7,"nodeType":"351","endLine":17,"endColumn":11,"suggestions":"448"},{"ruleId":"344","severity":1,"message":"449","line":28,"column":11,"nodeType":"346","messageId":"347","endLine":28,"endColumn":21},{"ruleId":"344","severity":1,"message":"450","line":30,"column":19,"nodeType":"346","messageId":"347","endLine":30,"endColumn":22},"no-native-reassign",["451"],"no-negated-in-lhs",["452"],"no-unused-vars","'NavHeader' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["453"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.",["455"],"'UpOutlined' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'LeftMenu' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Advertisement' is defined but never used.","'AddNew' is defined but never used.","'AddNewMovie' is defined but never used.","'FastForwardOutlined' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'API_URL' is defined but never used.","'API_KEY' is defined but never used.","'LANGUAGE' is defined but never used.","'IMAGE_BASE_URL' is defined but never used.","'POSTER_SIZE' is defined but never used.","'Radio' is defined but never used.","React Hook useEffect has a missing dependency: 'theater_eff'. Either include it or remove the dependency array.",["456"],"React Hook useEffect has missing dependencies: 'theaterRoom_eff' and 'theater_eff'. Either include them or remove the dependency array.",["457"],"'RangePicker' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Screening_eff' and 'theater_eff'. Either include them or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'Ticket_eff'. Either include it or remove the dependency array.",["459"],"'Checkbox' is defined but never used.","'Drawer' is defined but never used.","'Form' is defined but never used.","'SettingOutlined' is defined but never used.","'TextArea' is assigned a value but never used.","'addnew' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'custom'. Either include it or remove the dependency array.",["460"],"'uploadButton' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['run-time'] found.","Property","unnecessarilyComputedProperty",{"range":"461","text":"462"},"Unnecessarily computed property ['original_title'] found.",{"range":"463","text":"464"},"Unnecessarily computed property ['title'] found.",{"range":"465","text":"466"},"Unnecessarily computed property ['overview'] found.",{"range":"467","text":"468"},"Unnecessarily computed property ['release_date'] found.",{"range":"469","text":"470"},"Unnecessarily computed property ['backdrop_path'] found.",{"range":"471","text":"472"},"Unnecessarily computed property ['directors'] found.",{"range":"473","text":"474"},"Unnecessarily computed property ['actors'] found.",{"range":"475","text":"476"},"Unnecessarily computed property ['trailer'] found.",{"range":"477","text":"478"},"Unnecessarily computed property ['run_time'] found.",{"range":"479","text":"480"},{"range":"481","text":"464"},{"range":"482","text":"466"},{"range":"483","text":"468"},{"range":"484","text":"470"},{"range":"485","text":"472"},"Unnecessarily computed property ['poster_path'] found.",{"range":"486","text":"487"},{"range":"488","text":"474"},{"range":"489","text":"476"},{"range":"490","text":"478"},"'premiere' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'message' is defined but never used.","'Spin' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["491"],"'Option' is assigned a value but never used.","'theaters' is assigned a value but never used.","'settheaters' is assigned a value but never used.","'day' is assigned a value but never used.","'setday' is assigned a value but never used.",["492"],"'handleView' is assigned a value but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},[4013,4025],"'run-time'",[4059,4077],"'original_title'",[4111,4120],"'title'",[4154,4166],"'overview'",[4200,4216],"'release_date'",[4250,4267],"'backdrop_path'",[4301,4314],"'directors'",[4348,4358],"'actors'",[4392,4403],"'trailer'",[13355,13367],"'run_time'",[13429,13447],[13499,13508],[13551,13563],[13609,13625],[13694,13711],[13762,13777],"'poster_path'",[13826,13839],[13886,13896],[13940,13951],{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},"Update the dependencies array to be: [dispatch, getToken, isLogged]",{"range":"513","text":"514"},"Update the dependencies array to be: [getUser, token]",{"range":"515","text":"516"},"Update the dependencies array to be: [auth, dispatch, isAdmin, token]",{"range":"517","text":"518"},"Update the dependencies array to be: [theater_eff]",{"range":"519","text":"520"},"Update the dependencies array to be: [theaterRoom_eff, theater_eff]",{"range":"521","text":"522"},"Update the dependencies array to be: [Screening_eff, theater_eff]",{"range":"523","text":"524"},"Update the dependencies array to be: [Ticket_eff]",{"range":"525","text":"526"},"Update the dependencies array to be: [custom, data]",{"range":"527","text":"528"},"Update the dependencies array to be: [fetchData]",{"range":"529","text":"530"},"Update the dependencies array to be: [fetchData, id]",{"range":"531","text":"532"},[1200,1210],"[dispatch, getToken, isLogged]",[1257,1264],"[getUser, token]",[1402,1411],"[auth, dispatch, isAdmin, token]",[1533,1535],"[theater_eff]",[2303,2305],"[theaterRoom_eff, theater_eff]",[2702,2704],"[Screening_eff, theater_eff]",[2192,2194],"[Ticket_eff]",[799,805],"[custom, data]",[429,431],"[fetchData]",[416,420],"[fetchData, id]"]