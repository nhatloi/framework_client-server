[{"D:\\testgit\\framework_client-server\\client\\src\\index.js":"1","D:\\testgit\\framework_client-server\\client\\src\\App.js":"2","D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js":"3","D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js":"4","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js":"5","D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\Body.js":"6","D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\Header.js":"7","D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\LeftMenu.js":"8","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js":"9","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js":"10","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js":"11","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js":"12","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js":"13","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js":"14","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js":"15","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\commons\\GridCards.js":"16","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\commons\\MainImage.js":"17","D:\\testgit\\framework_client-server\\client\\src\\Config.js":"18","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\Profile.js":"19","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\Test.js":"20","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js":"21","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js":"22","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js":"23","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js":"24","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js":"25","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\FreeMovies\\FreeMovies.js":"26","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\News\\Home.js":"27","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\News\\MovieDetail.js":"28","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\FreeMovies\\WatchMovie.js":"29","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\InTheater\\InTheatersPage.js":"30","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\InTheater\\InTheatersDetail.js":"31","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\AdminPage.js":"32","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Movies.js":"33","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Account.js":"34","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Theaters.js":"35","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\News.js":"36","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Advertisement.js":"37","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js":"38","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js":"39","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\commons\\InformationUser.js":"40","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\commons\\AddNewMovie.js":"41"},{"size":371,"mtime":1609018420949,"results":"42","hashOfConfig":"43"},{"size":1633,"mtime":1610698741734,"results":"44","hashOfConfig":"43"},{"size":433,"mtime":1609018386481,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"43"},{"size":527,"mtime":1610591835793,"results":"47","hashOfConfig":"43"},{"size":2620,"mtime":1610700622538,"results":"48","hashOfConfig":"43"},{"size":2953,"mtime":1610690687619,"results":"49","hashOfConfig":"43"},{"size":2148,"mtime":1610423776920,"results":"50","hashOfConfig":"43"},{"size":219,"mtime":1610682954531,"results":"51","hashOfConfig":"43"},{"size":160,"mtime":1610682892144,"results":"52","hashOfConfig":"43"},{"size":598,"mtime":1610582521192,"results":"53","hashOfConfig":"43"},{"size":289,"mtime":1609020037560,"results":"54","hashOfConfig":"43"},{"size":1077,"mtime":1609111136612,"results":"55","hashOfConfig":"43"},{"size":465,"mtime":1609108283541,"results":"56","hashOfConfig":"43"},{"size":489,"mtime":1609056594023,"results":"57","hashOfConfig":"43"},{"size":1931,"mtime":1610168462806,"results":"58","hashOfConfig":"43"},{"size":751,"mtime":1609735987381,"results":"59","hashOfConfig":"43"},{"size":514,"mtime":1610866465767,"results":"60","hashOfConfig":"43"},{"size":8016,"mtime":1609814386135,"results":"61","hashOfConfig":"43"},{"size":960,"mtime":1610513003342,"results":"62","hashOfConfig":"43"},{"size":5441,"mtime":1610168146310,"results":"63","hashOfConfig":"43"},{"size":1073,"mtime":1610168167118,"results":"64","hashOfConfig":"43"},{"size":1489,"mtime":1610168165574,"results":"65","hashOfConfig":"43"},{"size":2645,"mtime":1610690292583,"results":"66","hashOfConfig":"43"},{"size":2175,"mtime":1610168373837,"results":"67","hashOfConfig":"43"},{"size":2276,"mtime":1610424706464,"results":"68","hashOfConfig":"43"},{"size":411,"mtime":1610592503879,"results":"69","hashOfConfig":"43"},{"size":5739,"mtime":1610425213592,"results":"70","hashOfConfig":"43"},{"size":3039,"mtime":1610350711612,"results":"71","hashOfConfig":"43"},{"size":1982,"mtime":1610424791538,"results":"72","hashOfConfig":"43"},{"size":177,"mtime":1610425250072,"results":"73","hashOfConfig":"43"},{"size":4148,"mtime":1610773968000,"results":"74","hashOfConfig":"43"},{"size":944,"mtime":1610868551089,"results":"75","hashOfConfig":"43"},{"size":3356,"mtime":1610828667728,"results":"76","hashOfConfig":"43"},{"size":342,"mtime":1610774018605,"results":"77","hashOfConfig":"43"},{"size":228,"mtime":1610774014805,"results":"78","hashOfConfig":"43"},{"size":265,"mtime":1610774007838,"results":"79","hashOfConfig":"43"},{"size":288,"mtime":1610682911758,"results":"80","hashOfConfig":"43"},{"size":391,"mtime":1610825259994,"results":"81","hashOfConfig":"43"},{"size":1093,"mtime":1610828670619,"results":"82","hashOfConfig":"43"},{"size":3917,"mtime":1610877653227,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"155qdx3",{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\testgit\\framework_client-server\\client\\src\\index.js",[],["177","178"],"D:\\testgit\\framework_client-server\\client\\src\\App.js",["179","180","181","182"],"import React,{useEffect, useState} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Body from './components/LandingPage/Body'\nimport NavHeader from './components/LandingPage/Header'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport axios from 'axios'\nimport {dispatchLogin,fetchUser,dispatchGetUser} from './redux/actions/authAction'\nimport {fetchAllUsers,dispatchGetAllUser} from './redux/actions/allUserAction'\nimport { Row} from 'antd';\nimport AdminPage from './AdminPage/AdminPage'\n\n\nfunction App() {\n//const \nconst dispatch = useDispatch()\nconst token = useSelector(state => state.token)\nconst auth = useSelector(state => state.auth)\nconst {isLogged,isAdmin} = auth\nconst users = useSelector(state => state.users)\nconst updatePage = localStorage.getItem('updatePage')\nconst getToken = async()=>{\n  dispatch(dispatchLogin())\n  const res = await axios.post('/user/refresh_token',null)\n  dispatch({type:'GET_TOKEN',payload: res.data.access_token})\n}\n\nconst getUser = () =>{\n  return fetchUser(token).then(res =>{\n    dispatch(dispatchGetUser(res))\n  })\n}\n\n\n//effect\nuseEffect(()=>{\n  const firstLogin = localStorage.getItem('firstLogin')\n  if(firstLogin){\n    getToken()\n  }\n\n  if(token){\n    getUser()\n  }\n  if(!isAdmin){\n    fetchAllUsers(token).then(res =>{\n      dispatch(dispatchGetAllUser(res))\n    })\n  }\n},[isLogged,dispatch,token])\n\n\n//render\n  return (\n    <div>\n      {isAdmin?<AdminPage/>\n        :<Router>\n\n              <Row className='body'>\n                <Body/>\n              </Row>\n\n          <NavHeader/>\n        </Router>\n}\n    </div>\n    \n    \n  )\n}\n\nexport default App\n\n","D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js",[],"D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\Body.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\Header.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\LandingPage\\LeftMenu.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\commons\\GridCards.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\commons\\MainImage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\Config.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\Profile.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\Test.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\FreeMovies\\FreeMovies.js",["183","184"],"import React,{useEffect,useState}from 'react'\r\nimport axios from 'axios'\r\nimport {Card,Row,Col,Pagination} from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction FreeMovies(props) {\r\n\r\n    //const     \r\n    const category = props.match.params.category\r\n    \r\n    const [movies, setMovies] = useState([])\r\n    const [totalPage, settotalPage] = useState(0)\r\n    const [page, setpage] = useState(1)\r\n    const url = `http://motphimmoi.net/${category}/page/${page}`\r\n\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        fetchData();\r\n    },[page])\r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMovies', {url:url})\r\n            setMovies(res.data.result);\r\n            settotalPage(res.data.totalPage)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Pagination simple current={page} total={totalPage*10} onChange={(page)=>{setpage(page)}}/>\r\n            <div className='list-movies'>\r\n                <Row gutter={[8, 8]}>\r\n                        {movies && movies.map((movie, index) => (\r\n                            <React.Fragment key={index}>\r\n                               <Col span={6} >\r\n                                   <div className='card-movie'>\r\n                                       <label>{movie.episode}</label>\r\n                                        <a href={`/whatmovie/${movie.href.substring(22)}tap-1-server-1`}>\r\n                                            <img alt ='poster' src={movie.img}/>\r\n                                            <div className='movie-infor'>\r\n                                                {movie.title}<p/>\r\n                                                {movie.time}\r\n                                                </div>\r\n                                        </a>\r\n                                   </div>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                                \r\n                            </React.Fragment>\r\n                                \r\n                        ))}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreeMovies\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\News\\Home.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useEffect, useState } from 'react'\r\nimport {Carousel,Spin} from 'antd';\r\nimport { API_URL,API_KEY, IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE,LANGUAGE} from '../../../../Config'\r\nimport MainImage from '../../commons/MainImage'\r\nimport GridCard from '../../commons/GridCards'\r\n\r\nfunction Home() {\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\News\\MovieDetail.js",["197"],"import React ,{useEffect,useState} from 'react'\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE,POSTER_SIZE,LANGUAGE } from '../../../../Config'\r\nimport { Button,Spin} from 'antd'\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { CloseOutlined,FieldTimeOutlined,CalendarOutlined} from '@ant-design/icons';\r\nimport GridCards from '../../commons/GridCards'\r\n\r\nfunction MovieDetailPage(props) {\r\n\r\n    //const \r\n    const movieId = props.match.params.movieId\r\n    const [playvideo, setplayvideo] = useState()\r\n    const [Key, setKey] = useState()\r\n    const [Movie, setMovie] = useState([])\r\n    const [Casts, setCasts] = useState([])\r\n\r\n    const LinkVideo =`https://www.youtube.com/watch?v=${Key}`\r\n\r\n\r\n    //fetch API\r\n    useEffect(() => {\r\n        const endpoint_video = `${API_URL}movie/${movieId}/videos?api_key=${API_KEY}&language=${LANGUAGE}`;\r\n        fetchKey(endpoint_video)\r\n\r\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`;\r\n        fetchDetailInfo(endpointForMovieInfo)\r\n        \r\n    },[movieId])\r\n\r\n    //get id video trailer\r\n    const fetchKey = (endpoint) => {\r\n\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setKey(result.results[0].key)\r\n               \r\n            })\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n\r\n    // get infor Movie\r\n    const fetchDetailInfo = (endpoint) => {\r\n\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setMovie(result)\r\n\r\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                fetch(endpointForCasts)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        console.log(result)\r\n                        setCasts(result.cast)\r\n                    })\r\n            })\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n\r\n    const PlayTrailer = () =>{\r\n        setplayvideo('visible')\r\n    }\r\n    const CloseTrailer = () =>{\r\n        setplayvideo('hidden')\r\n    }\r\n\r\n\r\n    //render\r\n    return (\r\n        <div>\r\n             <div className='detail'>\r\n                <div className='detail-banner'>\r\n                    <img alt='banner' src={`${IMAGE_BASE_URL}${IMAGE_SIZE}${Movie.backdrop_path}`}/>\r\n                </div>\r\n                <div  className='detail-card'>\r\n                    <img alt='card' src ={`${IMAGE_BASE_URL}${POSTER_SIZE}${Movie.poster_path}`}/>\r\n                    <span>\r\n                        <div className='info-Movie'>\r\n                            <h1>{Movie.original_title}</h1>\r\n                            <div>\r\n                                Genres: \r\n                                {Movie.genres && Movie.genres.map((genres, index) => (\r\n                                    <label>\r\n                                        {index === 0?\r\n                                            <label>{genres.name}</label>:\r\n                                            <label> - {genres.name}</label>\r\n                                        }\r\n                                    </label>\r\n                                ))}\r\n                                <div>Vote average: {Movie.vote_average}</div>\r\n                            </div>\r\n                            <CalendarOutlined /> {Movie.release_date} <FieldTimeOutlined /> {parseInt(Movie.runtime/60)}h{Movie.runtime%60}m\r\n                            \r\n                        </div>\r\n                        <Button\r\n                            onClick={PlayTrailer}\r\n                            >\r\n                        View Trailer</Button>\r\n                        <a href={Movie.homepage}>Home page</a>\r\n                        <div>\r\n                            {Movie.production_companies && Movie.production_companies.map((companies, index) => (\r\n                                <span>\r\n                                    {\r\n                                        companies.logo_path?<img alt='companies'\r\n                                        src={`${IMAGE_BASE_URL}${POSTER_SIZE}${companies.logo_path}`}\r\n                                        style={{width:30,height:30  }}/>:\r\n                                        null\r\n                                    }\r\n                                </span>\r\n                                        \r\n                            \r\n                            ))}\r\n                        </div>\r\n                        \r\n\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        <div className='player-wrapper' style={{visibility:`${playvideo}`}}>\r\n            Trailer\r\n            <label onClick={CloseTrailer}><CloseOutlined /></label>\r\n            <ReactPlayer\r\n            url={LinkVideo}\r\n            width='100%'\r\n            height='90%'\r\n            controls = {true}\r\n            playing = {playvideo ==='visible' ? true:false }\r\n            />\r\n      </div>\r\n    {/* Actors Grid*/}\r\n     <h2>Series Cast</h2>\r\n    <div className='actors'>\r\n                {Casts && Casts.map((cast, index) => (\r\n                        <React.Fragment key={index}>\r\n                           <GridCards actor image={cast.profile_path} characterName={cast.name} characterC={cast.character}/>\r\n                        </React.Fragment>\r\n                    ))}\r\n                {!Casts.length &&\r\n                    <Spin tip=\"Loading...\" />}\r\n                </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieDetailPage\r\n\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\FreeMovies\\WatchMovie.js",["198"],"import React,{useEffect,useState}from 'react'\r\nimport axios from 'axios'\r\nimport Iframe from 'react-iframe'\r\n\r\n\r\nfunction WhatMovie(props) {\r\n    //const\r\n    const nameMovie = props.match.params.nameMovie\r\n    const episode = props.match.params.episode\r\n    const url = `http://motphimmoi.net/${nameMovie}`\r\n    const [movie, setMovie] = useState('')\r\n    const [movieActors, setMovieActors] = useState([])\r\n    const [listVideo, setlistVideo] = useState([])\r\n    const [linkPlay, setlinkPlay] = useState('')\r\n    const urlVideo = `http://motphimmoi.net/xem-phim/${nameMovie}-${episode}`\r\n    useEffect(() => {\r\n        fetchData()\r\n        fetchlistVideo();\r\n    }, [nameMovie,episode])\r\n    const fetchData = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMoviesDetail', {url:url})\r\n            setMovie(res.data.results);\r\n            setMovieActors(res.data.results.actors)\r\n            setlistVideo(res.data.results.playvideo)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    const fetchlistVideo = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchPlayVideo', {url:urlVideo});\r\n            setlinkPlay(res.data.playvideo)\r\n            \r\n\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'> \r\n            <div className='free-movie'>\r\n                <Iframe url={linkPlay}\r\n                        width=\"100%\"\r\n                        height=\"600px\"\r\n                        id='movie'\r\n                        allowFullScreen\r\n                        allow = \"fullscreen\" />\r\n                \r\n                <div className='movie-infor'>\r\n                    <h2>{movie.title}</h2>\r\n                    <div className='episode-movie'>\r\n                    <button onClick={()=>{setlinkPlay(movie.trailer)}}>\r\n                    Trailer</button>\r\n                    {listVideo && listVideo.map((epi, index) => (\r\n                                    <a href={`/whatmovie/${nameMovie}/tap-${index+1}-server-1`}>\r\n                                        <button>{index+1}</button>\r\n                                   </a>\r\n                        ))}\r\n                    </div>\r\n                    <label>{movie.episode}</label>\r\n                    <label>{movie.duration}</label>\r\n                    <label>{movie.year}</label>\r\n                    <label>{movie.country}</label>\r\n                    <label>Diễn viên: {movieActors && movieActors.map((actor, index)=> (\r\n                             <label >\r\n                                 {index===0? actor:`,${actor}`}\r\n                             </label>\r\n                    ))}</label>\r\n                    <label>{movie.category}</label>\r\n                    <div className = 'movie-overview'>\r\n                    Overview: {movie.overview}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatMovie\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\InTheater\\InTheatersPage.js",["199"],"import React,{useState,useEffect}from 'react'\r\nimport axios from 'axios'\r\nimport {Row,Col} from 'antd';\r\n\r\nfunction InTheatersPage(props) {\r\n    //const\r\n    const query = props.match.params.query\r\n    const [movies, setMovies] = useState([])\r\n    const url = `https://moveek.com/${query}`\r\n \r\n    useEffect(() => {\r\n        fetchData();\r\n    },[])\r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMovieTheaters', {url:url})\r\n            setMovies(res.data.movies);\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2>{query}</h2>\r\n            <div className='list-movies'>\r\n                <Row gutter={[8, 8]}>\r\n                        {movies && movies.map((movie, index) => (\r\n                            <React.Fragment key={index}>\r\n                               <Col span={6} >\r\n                                   <div className='card-movie'>\r\n                                       <label>{movie.episode}</label>\r\n                                        <a href={`/intheaters/detail/${movie.title}`}>\r\n                                            <img alt ='poster' src={movie.img}/>\r\n                                            <div className='movie-infor'>\r\n                                                {movie.title}<p/>\r\n                                                Khởi chiếu: {movie.date}\r\n                                                </div>\r\n                                        </a>\r\n                                   </div>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                                \r\n                            </React.Fragment>\r\n                                \r\n                        ))}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InTheatersPage\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\Body\\View\\InTheater\\InTheatersDetail.js",["200"],"import React from 'react'\r\n\r\nfunction InTheatersDetail() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InTheatersDetail\r\n","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\AdminPage.js",["201","202","203","204","205","206","207"],"import React,{useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { Layout, Menu,Button } from 'antd';\r\nimport axios from 'axios';\r\nimport {\r\n  BarChartOutlined,\r\n  CloudOutlined,\r\n  UserOutlined,\r\n  UploadOutlined,\r\n  DatabaseOutlined,\r\n  PoweroffOutlined\r\n} from '@ant-design/icons';\r\nimport './AdminPage.css'\r\nimport Account from './Body/Account'\r\nimport Movies from './Body/Movies'\r\nimport Theaters from './Body/Theaters'\r\nimport News from './Body/News'\r\nimport Advertisement from './Body/Advertisement'\r\n\r\n\r\nconst { Header,Footer, Sider } = Layout;\r\n\r\nfunction AdminPage() {\r\n    const initialState = -1\r\n    const [indexAcount, setindexAcount] = useState(1)\r\n    const [indexTheaters, setindexTheaters] = useState(initialState)\r\n    const [indexMovies, setindexMovies] = useState(initialState)\r\n    const [indexNews, setindexNews] = useState(initialState)\r\n    const [indexAdvertisement, setindexAdvertisement] = useState(initialState)\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    const ClickPage =(props)=>{\r\n        \r\n        setindexAcount(initialState)\r\n        setindexTheaters(initialState)\r\n        setindexMovies(initialState)\r\n        setindexNews(initialState)\r\n        setindexAdvertisement(initialState)\r\n        if(props.key == 'Account')  setindexAcount(1);\r\n        if(props.key == 'Theaters')  setindexTheaters(1);\r\n        if(props.key == 'Movies')  setindexMovies(1);\r\n        if(props.key == 'News') setindexNews(1);\r\n        if(props.key == 'Advertisement') setindexAdvertisement(1);\r\n    }\r\n\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <Sider\r\n                style={{\r\n                    overflow:'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                }}\r\n                >\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <div className='user-Admin'>{user.name}</div>\r\n                    <Menu.Item onClick={ClickPage} key=\"Account\" icon={<UserOutlined/>}>\r\n                    Account\r\n                    </Menu.Item>\r\n                    <Menu.Item onClick={ClickPage} key=\"Theaters\" icon={<DatabaseOutlined />}>\r\n                    Theaters\r\n                    </Menu.Item>\r\n                    <Menu.Item onClick={ClickPage} key=\"Movies\" icon={<UploadOutlined />}>\r\n                    Movies\r\n                    </Menu.Item>\r\n                    <Menu.Item onClick={ClickPage} key=\"News\" icon={<BarChartOutlined />}>\r\n                    News\r\n                    </Menu.Item>\r\n                    <Menu.Item onClick={ClickPage} key=\"Advertisement\" icon={<CloudOutlined />}>\r\n                    Advertisement\r\n                    </Menu.Item>\r\n                    <Menu.Item onClick={handleLogout} key=\"Logout\" icon={<PoweroffOutlined />}>\r\n                    Logout\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\r\n                <Header className=\"headder-admin\">\r\n                <marquee>This is the site for admin.</marquee>\r\n                </Header>\r\n                <div className='body-admin'>\r\n                    <Account index = {indexAcount}/>\r\n                    <Movies index = {indexMovies}/>\r\n                    <Theaters index = {indexTheaters}/>\r\n                    <News index = {indexNews}/>\r\n                    <Advertisement index = {indexAdvertisement}/>\r\n                </div>\r\n                <div className = 'footer'>\r\n                    <Footer style={{ textAlign: 'center' }}>FRadar ©2021 Created by NhatLoi</Footer>\r\n                </div>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage\r\n","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Movies.js",["208"],"D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Account.js",["209"],"import React ,{useState,useEffect}from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { Table,Typography,message,Drawer,Modal} from 'antd';\r\nimport { EyeOutlined,DeleteOutlined} from '@ant-design/icons';\r\nimport {fetchAllUsers,dispatchGetAllUser} from '../../redux/actions/allUserAction'\r\nimport Information from './commons/InformationUser'\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    email:'',\r\n    name:'',\r\n    avatar:'',\r\n}\r\n\r\n\r\n\r\nfunction Account(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const updatePage = localStorage.getItem('updatePage')\r\n    useEffect(()=>{\r\n        fetchAllUsers(token).then(res =>{\r\n            dispatch(dispatchGetAllUser(res))\r\n          })\r\n        localStorage.removeItem('updatePage')\r\n      },[updatePage])\r\n\r\n\r\n    //const \r\n    const columns = [\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n    \r\n      const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/user/delete/${userInfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + userInfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n    \r\n    const [visible, setvisible] = useState(false)\r\n    const index = props.index\r\n    const token = useSelector(state => state.token)\r\n    const users = useSelector(state => state.users)\r\n    const [userInfor, setuserInfor] = useState(initialState)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n\r\n    //render\r\n    return (\r\n        <div className='account' style={{zIndex:index}}>\r\n            <h2><Text underline>User Manager</Text></h2>\r\n            <Table columns={columns} dataSource={users}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                  onClick: event => {setuserInfor(users[rowIndex])}, // click row\r\n                  onContextMenu: event => {}, // right button click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information infor ={userInfor}/>\r\n            </Drawer>\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete}>\r\n                <p>Delete User?</p>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Theaters.js",[],"D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\News.js",[],"D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\Advertisement.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\commons\\InformationUser.js",["210"],"import React from 'react'\r\nimport { Form} from 'antd';\r\n\r\nfunction InformationUser(props) {\r\n    const infor = props.infor\r\n    return (\r\n        <div className='information'>\r\n            <div className= 'left-infor'>\r\n                <img alt='avatar' src={infor.avatar}/><br/>\r\n            </div>\r\n            <div className='right-infor'>\r\n            <Form name=\"information\">\r\n                <Form.Item label=\"_Id\">\r\n                    {infor._id}\r\n                </Form.Item>\r\n                <Form.Item label=\"Email\">\r\n                    {infor.email}\r\n                </Form.Item>\r\n                <Form.Item label=\"Name\">\r\n                    {infor.name}\r\n                </Form.Item>\r\n                <Form.Item label=\"Type Account\">\r\n                    {infor.role== 1?<div>Admin Account</div>:<div>User Account</div>}\r\n                </Form.Item>\r\n                <Form.Item label=\"Date Create\">\r\n                    {infor.createdAt}\r\n                </Form.Item>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InformationUser\r\n","D:\\testgit\\framework_client-server\\client\\src\\AdminPage\\Body\\commons\\AddNewMovie.js",["211","212","213","214","215","216","217","218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":1,"column":26,"nodeType":"226","messageId":"227","endLine":1,"endColumn":34},{"ruleId":"224","severity":1,"message":"228","line":19,"column":7,"nodeType":"226","messageId":"227","endLine":19,"endColumn":12},{"ruleId":"224","severity":1,"message":"229","line":20,"column":7,"nodeType":"226","messageId":"227","endLine":20,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":49,"column":3,"nodeType":"232","endLine":49,"endColumn":28,"suggestions":"233"},{"ruleId":"224","severity":1,"message":"234","line":5,"column":9,"nodeType":"226","messageId":"227","endLine":5,"endColumn":13},{"ruleId":"230","severity":1,"message":"235","line":22,"column":7,"nodeType":"232","endLine":22,"endColumn":13,"suggestions":"236"},{"ruleId":"224","severity":1,"message":"237","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"225","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"238","line":2,"column":9,"nodeType":"226","messageId":"227","endLine":2,"endColumn":17},{"ruleId":"224","severity":1,"message":"239","line":2,"column":18,"nodeType":"226","messageId":"227","endLine":2,"endColumn":22},{"ruleId":"224","severity":1,"message":"240","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":17},{"ruleId":"224","severity":1,"message":"241","line":3,"column":18,"nodeType":"226","messageId":"227","endLine":3,"endColumn":25},{"ruleId":"224","severity":1,"message":"242","line":3,"column":27,"nodeType":"226","messageId":"227","endLine":3,"endColumn":41},{"ruleId":"224","severity":1,"message":"243","line":3,"column":43,"nodeType":"226","messageId":"227","endLine":3,"endColumn":53},{"ruleId":"224","severity":1,"message":"244","line":3,"column":55,"nodeType":"226","messageId":"227","endLine":3,"endColumn":66},{"ruleId":"224","severity":1,"message":"245","line":3,"column":67,"nodeType":"226","messageId":"227","endLine":3,"endColumn":75},{"ruleId":"224","severity":1,"message":"246","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":17},{"ruleId":"224","severity":1,"message":"247","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"248","line":28,"column":7,"nodeType":"232","endLine":28,"endColumn":16,"suggestions":"249"},{"ruleId":"230","severity":1,"message":"250","line":19,"column":8,"nodeType":"232","endLine":19,"endColumn":27,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"235","line":13,"column":7,"nodeType":"232","endLine":13,"endColumn":9,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":8,"column":13,"nodeType":"255","endLine":8,"endColumn":17},{"ruleId":"224","severity":1,"message":"256","line":3,"column":23,"nodeType":"226","messageId":"227","endLine":3,"endColumn":29},{"ruleId":"257","severity":1,"message":"258","line":40,"column":22,"nodeType":"259","messageId":"260","endLine":40,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":41,"column":22,"nodeType":"259","messageId":"260","endLine":41,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":42,"column":22,"nodeType":"259","messageId":"260","endLine":42,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":43,"column":22,"nodeType":"259","messageId":"260","endLine":43,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":44,"column":22,"nodeType":"259","messageId":"260","endLine":44,"endColumn":24},{"ruleId":"261","severity":1,"message":"262","line":92,"column":17,"nodeType":"255","endLine":92,"endColumn":26},{"ruleId":"224","severity":1,"message":"237","line":1,"column":24,"nodeType":"226","messageId":"227","endLine":1,"endColumn":33},{"ruleId":"230","severity":1,"message":"263","line":26,"column":9,"nodeType":"232","endLine":26,"endColumn":21,"suggestions":"264"},{"ruleId":"257","severity":1,"message":"258","line":23,"column":32,"nodeType":"259","messageId":"260","endLine":23,"endColumn":34},{"ruleId":"224","severity":1,"message":"265","line":6,"column":7,"nodeType":"226","messageId":"227","endLine":6,"endColumn":13},{"ruleId":"224","severity":1,"message":"266","line":7,"column":5,"nodeType":"226","messageId":"227","endLine":7,"endColumn":9},{"ruleId":"257","severity":1,"message":"258","line":24,"column":23,"nodeType":"259","messageId":"260","endLine":24,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":28,"column":23,"nodeType":"259","messageId":"260","endLine":28,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":41,"column":23,"nodeType":"259","messageId":"260","endLine":41,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":45,"column":23,"nodeType":"259","messageId":"260","endLine":45,"endColumn":25},{"ruleId":"224","severity":1,"message":"267","line":79,"column":12,"nodeType":"226","messageId":"227","endLine":79,"endColumn":22},{"ruleId":"224","severity":1,"message":"268","line":79,"column":24,"nodeType":"226","messageId":"227","endLine":79,"endColumn":37},{"ruleId":"257","severity":1,"message":"258","line":100,"column":85,"nodeType":"259","messageId":"260","endLine":100,"endColumn":87},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'updatePage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getToken', 'getUser', and 'isAdmin'. Either include them or remove the dependency array.","ArrayExpression",["271"],"'Meta' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["272"],"'useEffect' is defined but never used.","'Carousel' is defined but never used.","'Spin' is defined but never used.","'API_URL' is defined but never used.","'API_KEY' is defined but never used.","'IMAGE_BASE_URL' is defined but never used.","'IMAGE_SIZE' is defined but never used.","'POSTER_SIZE' is defined but never used.","'LANGUAGE' is defined but never used.","'MainImage' is defined but never used.","'GridCard' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDetailInfo'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'fetchData' and 'fetchlistVideo'. Either include them or remove the dependency array.",["274"],["275"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["276"],"'search' is assigned a value but never used.","'opts' is assigned a value but never used.","'postterImg' is assigned a value but never used.","'setpostterImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [isLogged, dispatch, token, isAdmin, getToken, getUser]",{"range":"289","text":"290"},"Update the dependencies array to be: [fetchData, page]",{"range":"291","text":"292"},"Update the dependencies array to be: [fetchDetailInfo, movieId]",{"range":"293","text":"294"},"Update the dependencies array to be: [nameMovie, episode, fetchData, fetchlistVideo]",{"range":"295","text":"296"},"Update the dependencies array to be: [fetchData]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch, token, updatePage]",{"range":"299","text":"300"},[1353,1378],"[isLogged, dispatch, token, isAdmin, getToken, getUser]",[522,528],"[fetchData, page]",[1071,1080],"[fetchDetailInfo, movieId]",[668,687],"[nameMovie, episode, fetchData, fetchlistVideo]",[345,347],"[fetchData]",[802,814],"[dispatch, token, updatePage]"]