[{"D:\\testgit\\framework_client-server\\client\\src\\index.js":"1","D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js":"2","D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js":"3","D:\\testgit\\framework_client-server\\client\\src\\App.js":"4","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js":"5","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js":"6","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js":"7","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\AdminPage.js":"8","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Header.js":"9","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js":"10","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js":"11","D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js":"12","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js":"13","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js":"14","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js":"15","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js":"16","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js":"17","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js":"18","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js":"19","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\FreeMovies\\WatchMovie.js":"20","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Test.js":"21","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Profile.js":"22","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\FreeMovies\\FreeMovies.js":"23","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js":"24","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Advertisement.js":"25","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Account.js":"26","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\News.js":"27","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js":"28","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theaters.js":"29","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js":"30","D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js":"31","D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js":"32","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js":"33","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationUser.js":"34","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js":"35","D:\\testgit\\framework_client-server\\client\\src\\Config.js":"36","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js":"37","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Movie.js":"38","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Body.js":"39"},{"size":368,"mtime":1610990919255,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":433,"mtime":1609018386481,"results":"43","hashOfConfig":"41"},{"size":1778,"mtime":1615937017875,"results":"44","hashOfConfig":"41"},{"size":219,"mtime":1610682954531,"results":"45","hashOfConfig":"41"},{"size":530,"mtime":1612568698979,"results":"46","hashOfConfig":"41"},{"size":392,"mtime":1610921243633,"results":"47","hashOfConfig":"41"},{"size":2439,"mtime":1615926454538,"results":"48","hashOfConfig":"41"},{"size":4263,"mtime":1611162314309,"results":"49","hashOfConfig":"41"},{"size":289,"mtime":1609020037560,"results":"50","hashOfConfig":"41"},{"size":288,"mtime":1610682911758,"results":"51","hashOfConfig":"41"},{"size":160,"mtime":1610682892144,"results":"52","hashOfConfig":"41"},{"size":2148,"mtime":1610423776920,"results":"53","hashOfConfig":"41"},{"size":1489,"mtime":1610168165574,"results":"54","hashOfConfig":"41"},{"size":2175,"mtime":1610168373837,"results":"55","hashOfConfig":"41"},{"size":1073,"mtime":1610168167118,"results":"56","hashOfConfig":"41"},{"size":598,"mtime":1612568683285,"results":"57","hashOfConfig":"41"},{"size":1077,"mtime":1609111136612,"results":"58","hashOfConfig":"41"},{"size":465,"mtime":1609108283541,"results":"59","hashOfConfig":"41"},{"size":3058,"mtime":1610905843940,"results":"60","hashOfConfig":"41"},{"size":960,"mtime":1610513003342,"results":"61","hashOfConfig":"41"},{"size":8017,"mtime":1612550928358,"results":"62","hashOfConfig":"41"},{"size":2248,"mtime":1610905879175,"results":"63","hashOfConfig":"41"},{"size":5441,"mtime":1610168146310,"results":"64","hashOfConfig":"41"},{"size":242,"mtime":1615919634445,"results":"65","hashOfConfig":"41"},{"size":4025,"mtime":1616009433336,"results":"66","hashOfConfig":"41"},{"size":205,"mtime":1615919429549,"results":"67","hashOfConfig":"41"},{"size":168,"mtime":1610905774429,"results":"68","hashOfConfig":"41"},{"size":319,"mtime":1615919436226,"results":"69","hashOfConfig":"41"},{"size":2006,"mtime":1612472441211,"results":"70","hashOfConfig":"41"},{"size":4387,"mtime":1610989673026,"results":"71","hashOfConfig":"41"},{"size":489,"mtime":1609056594023,"results":"72","hashOfConfig":"41"},{"size":4427,"mtime":1615927119097,"results":"73","hashOfConfig":"41"},{"size":1434,"mtime":1615936651107,"results":"74","hashOfConfig":"41"},{"size":6162,"mtime":1615935777363,"results":"75","hashOfConfig":"41"},{"size":514,"mtime":1610866465767,"results":"76","hashOfConfig":"41"},{"size":1065,"mtime":1612568866778,"results":"77","hashOfConfig":"41"},{"size":4143,"mtime":1615937219828,"results":"78","hashOfConfig":"41"},{"size":2363,"mtime":1615937013117,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"155qdx3",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":10,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},"D:\\testgit\\framework_client-server\\client\\src\\index.js",[],["172","173"],"D:\\testgit\\framework_client-server\\client\\src\\reportWebVitals.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\store.js",[],"D:\\testgit\\framework_client-server\\client\\src\\App.js",["174","175","176"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport BodyUser from './components/UserPage/LandingPage/Body'\r\nimport NavHeader from './components/UserPage/LandingPage/Header'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {fetchUser,dispatchGetUser,dispatchLogin} from './redux/actions/authAction'\r\nimport {fetchAllUsers,dispatchGetAllUser} from './redux/actions/allUserAction'\r\nimport AdminPage from './components/AdminPage/AdminPage'\r\n\r\n\r\nfunction App() {\r\n//const \r\nconst dispatch = useDispatch()\r\nconst token = useSelector(state => state.token)\r\nconst auth = useSelector(state => state.auth)\r\nconst {isLogged,isAdmin} = auth\r\n\r\n\r\nconst getToken = async()=>{\r\n  const res = await axios.post('/user/refresh_token',null)\r\n  dispatch({type:'GET_TOKEN',payload: res.data.access_token})\r\n}\r\n\r\nconst getUser = async() =>{\r\n  return fetchUser(token).then(res =>{\r\n    dispatch(dispatchGetUser(res))\r\n  })\r\n}\r\n\r\n\r\n//effect\r\nuseEffect(()=>{\r\n  const firstLogin = localStorage.getItem('firstLogin')\r\n  if(firstLogin){\r\n    getToken()\r\n    dispatch(dispatchLogin())\r\n  }\r\n},[isLogged])\r\n\r\nuseEffect(()=>{\r\n  if(token) getUser()\r\n},[token])\r\n\r\nuseEffect(()=>{\r\n  if(isAdmin){\r\n    fetchAllUsers(token,auth).then(res =>{\r\n      dispatch(dispatchGetAllUser(res))\r\n    })\r\n  }\r\n},[isAdmin])\r\n\r\n\r\n//render\r\n  return (\r\n    <div>\r\n      <Router>\r\n        {\r\n          isAdmin?<div>\r\n          <div>\r\n            <AdminPage/>\r\n          </div>\r\n        </div>\r\n          :\r\n          <div>\r\n            <div className='body'>\r\n              <BodyUser/>\r\n            </div>\r\n            <NavHeader/>\r\n          </div>\r\n        }\r\n      </Router>\r\n    </div>\r\n    \r\n    \r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\authAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\allUserAction.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\AdminPage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Header.js",["177"],"import React,{useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport logo from '../../../access/images/Logo.png';  \r\nimport {UpOutlined} from '@ant-design/icons';  \r\nimport {BackTop , Menu, Dropdown} from 'antd';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Button\r\n  } from 'reactstrap';\r\nimport LeftMenu from './LeftMenu'\r\nimport { Drawer } from 'antd';\r\nimport Login from '../../auth/Login'\r\n\r\n\r\n\r\n\r\n\r\nfunction NavHeader() {\r\n    //const\r\n    const auth = useSelector(state => state.auth)\r\n    const {user,isLogged} = auth;\r\n    const [visible, setvisible] = useState(false)\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n    const handleLogin =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\">\r\n            <a href=\"/profile\">Profile</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <label onClick={handleLogout}>Logout</label>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const userInfor = () =>{\r\n        return <Dropdown overlay={menu} trigger={['click']}>\r\n            <div>\r\n                <label className='user'>    \r\n                <img alt='' src={user.avatar}/>\r\n                {user.name}\r\n                </label>\r\n            </div>\r\n    </Dropdown>\r\n    }\r\n\r\n    //\r\n\r\n\r\n    // Render\r\n    return (\r\n        <div className='header'>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <img alt='logo' src={logo}/>\r\n            FRadar</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/news\">News</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Movie theaters\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                <NavLink href=\"/freemovies/phim-chieu-rap\">Movie theaters</NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                <NavLink href=\"/freemovies/phim-hay\">Good Movies</NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                <NavLink href=\"/freemovies/phim-bo\">series Movies</NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                <NavLink href=\"/freemovies/phim-le\">odd Movies</NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Movie theaters\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                <NavLink href=\"/intheaters/sap-chieu\">Up comming</NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                <NavLink href=\"/intheaters/dang-chieu\">Now Play</NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          {isLogged?userInfor()\r\n          :\r\n          <div><Button onClick={handleLogin}>login</Button>\r\n                <Drawer\r\n                    title=\"Login\"\r\n                    placement=\"right\"\r\n                    onClose={handleLogin}\r\n                    visible={visible}>\r\n                    <Login/>\r\n                </Drawer>\r\n          </div>\r\n          \r\n          }\r\n        </Collapse>\r\n      </Navbar>\r\n        <LeftMenu/>\r\n        <BackTop>\r\n          <Button className='backtop'>UP</Button>\r\n        </BackTop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavHeader\r\n","D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\actions\\index.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ForgotPw.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\ActiveEmail.js",[],"D:\\testgit\\framework_client-server\\client\\src\\redux\\reducers\\authReducer.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Successfully.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\Notfound.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\FreeMovies\\WatchMovie.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Test.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\Profile.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\FreeMovies\\FreeMovies.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Register.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Advertisement.js",["178"],"import React from 'react'\r\n\r\nfunction Advertisement(props) {\r\n    const index = props.index\r\n    return (\r\n        <div className='advertisement'>\r\n            <h2>Advertisement</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Advertisement\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Account.js",["179","180","181","182","183","184","185"],"import React ,{useState,useEffect}from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { Table,Typography,message,Drawer,Modal,Input,Button } from 'antd';\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined,SearchOutlined} from '@ant-design/icons';\r\nimport {fetchAllUsers,dispatchGetAllUser} from '../../../redux/actions/allUserAction'\r\nimport Information from './commons/InformationUser'\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    email:'',\r\n    name:'',\r\n    avatar:'',\r\n}\r\n\r\nfunction Account() {\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n        \r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const users = useSelector(state => state.users)\r\n    const [userView, setuserView] = useState([])\r\n    const [userInfor, setuserInfor] = useState(initialState)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n     //const \r\n     const columns = [\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n    \r\n      const handleSearch = (e) =>{\r\n        var count=[];\r\n        users.forEach(element => {\r\n            if(element.name.toLowerCase().search(e.target.value) != -1 || element.email.toLowerCase().search(e.target.value) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        if(count==0)\r\n            setuserView(users);\r\n            if(count!=0) {\r\n                setuserView(count);\r\n            }\r\n      }\r\n\r\n      const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/user/delete/${userInfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + userInfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchAllUsers(token).then(res =>{\r\n            dispatch(dispatchGetAllUser(res))\r\n          })\r\n\r\n        if(!userView[0])\r\n          setuserView(users);\r\n      },[dispatch,token,users])\r\n      \r\n\r\n    //render\r\n    return (\r\n        <div className='account' >\r\n            <h2><Text underline>User Manager</Text></h2>\r\n            <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n            <Table columns={columns} dataSource={userView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                  onClick: event => {setuserInfor(userView[rowIndex])}, // click row\r\n                  onContextMenu: event => {}, // right button click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information account infor ={userInfor}/>\r\n            </Drawer>\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete}>\r\n                <p>Delete User?</p>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\News.js",["186"],"import React from 'react'\r\n\r\nfunction News(props) {\r\n    const index = props.index\r\n    return (\r\n        <div className='news'>\r\n           <h2>News</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Theaters.js",["187"],"import React from 'react'\r\nimport {Typography} from 'antd';\r\n\r\nconst { Text} = Typography;\r\n\r\nfunction Theaters(props) {\r\n    const index = props.index\r\n    return (\r\n        <div className='theaters'>\r\n             <h2><Text underline>Theaters Manager</Text></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Theaters\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\auth\\Login.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\utils\\functionCheck.js",[],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js",["188","189","190"],"import React ,{useState,useEffect}from 'react'\r\nimport { API_URL, API_KEY,LANGUAGE ,IMAGE_BASE_URL,POSTER_SIZE} from '../../../../Config'\r\nimport { Row, Col,Input,Button, Radio ,Modal} from 'antd';\r\nimport axios from 'axios'\r\nimport InformationMovie from './InformationMovie'\r\nimport MovieCard from './MovieCard'\r\n\r\nconst { Search } = Input;\r\n// const search = require('youtube-search');\r\n// var opts = {\r\n//     maxResults: 10,\r\n//     key: 'AIzaSyDI_zPC4aEbkvVm03X2qtHoZL03XipKxTs'\r\n//   };\r\n\r\n\r\n\r\nfunction AddNewMovie() {\r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [soureFetch, setsoureFetch] = useState('themoviedb')\r\n    const [visible, setvisible] = useState(false)\r\n\r\n    //Effect\r\n    useEffect(() => {\r\n\r\n        if(soureFetch === 'themoviedb'){\r\n            fetcMoviesThemoviedb()\r\n        }\r\n        if(soureFetch === 'moveek'){\r\n            fetchMovieMoveek()\r\n        }\r\n    },[soureFetch])\r\n\r\n    function onChange(e) {\r\n        setsoureFetch(e.target.value)\r\n    }\r\n\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const handleSearch = async(props) =>{\r\n        if(!props) return\r\n        if(soureFetch === 'themoviedb'){\r\n            const endpoint_video = `${API_URL}search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${props}`;\r\n            fetcMoviesThemoviedb(endpoint_video)\r\n        }\r\n        if(soureFetch === 'moveek'){\r\n            const url = ` https://moveek.com/tim-kiem/?s=${props}`\r\n            try {\r\n                const res = await axios.post('/movie/searchTheaters', {url:url})\r\n                setMovies(res.data)\r\n                console.log(res)\r\n            } catch (err) {\r\n               return err.response.data.msg\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const fetchMovieMoveek = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMovieTheaters', {url:'https://moveek.com/sap-chieu/'})\r\n            setMovies(res.data.movies)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n\r\n    const fetcMoviesThemoviedb = async() => {\r\n        try {\r\n            const res = await axios.get('/movie/themoviedb')\r\n            setMovies(res.data.movies)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className= 'AddNewMovie'>\r\n            <Radio.Group onChange={onChange} defaultValue=\"themoviedb\">\r\n                <Radio.Button value=\"themoviedb\">The movie db</Radio.Button>\r\n                <Radio.Button value=\"moveek\">moveek</Radio.Button>\r\n            </Radio.Group>\r\n            <Search\r\n                placeholder=\"Name Movie\"\r\n                allowClear\r\n                enterButton=\"Search\"\r\n                size=\"large\"\r\n                onSearch={handleSearch}\r\n                />\r\n\r\n            <div className='movie-search'>\r\n            <Row gutter={[8, 16]}>\r\n                {Movies && Movies.map((movie, index) => (\r\n                                <React.Fragment key={index}>\r\n                                     <Col span={4} >\r\n                                        <div>\r\n                                            <MovieCard movie={movie}\r\n                                            soureFetch = {soureFetch}/>\r\n                                        </div>\r\n                                     </Col>\r\n                                   \r\n                                \r\n                                </React.Fragment>\r\n                            ))}\r\n            </Row>\r\n            </div>\r\n            <Button onClick={handleAdd}\r\n            style={{background:'black',color:'white',position:'absolute',bottom:'10px',right:'50px'}}>Custom</Button>\r\n            <Modal\r\n                height='70%'\r\n                title=\"Add new movies\"\r\n                placement=\"top\"\r\n                visible={visible}\r\n                title=\"Information Movie\"\r\n                closable={false}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={handleAdd}>\r\n                      Return\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\"  onClick={handleAdd}>\r\n                      Submit\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                <InformationMovie soureFetch='new'/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewMovie\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationUser.js",["191"],"import React from 'react'\r\nimport { Form} from 'antd';\r\n\r\nfunction InformationUser(props) {\r\n    const infor = props.infor\r\n    // acount\r\n    if(props.account)\r\n    return (\r\n        <div className='information'>\r\n            <div className= 'left-infor'>\r\n                <img alt='avatar' src={infor.avatar}/><br/>\r\n            </div>\r\n            <div className='right-infor'>\r\n            <Form name=\"information\">\r\n                <Form.Item label=\"_Id\">\r\n                    {infor._id}\r\n                </Form.Item>\r\n                <Form.Item label=\"Email\">\r\n                    {infor.email}\r\n                </Form.Item>\r\n                <Form.Item label=\"Name\">\r\n                    {infor.name}\r\n                </Form.Item>\r\n                <Form.Item label=\"Type Account\">\r\n                    {infor.role=== 1?<div>Admin Account</div>:<div>User Account</div>}\r\n                </Form.Item>\r\n                <Form.Item label=\"Date Create\">\r\n                    {infor.createdAt}\r\n                </Form.Item>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n    if(props.movie)\r\n    return (\r\n        <div className='information' style={{backgroundImage:`url(\"${infor.backdrop_path}\")`,backgroundRepeat: 'no-repeat',backgroundPosition:'center'}}>\r\n           <img src={infor.poster_path} style={{top:'0',left:'0',height:'500px'}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InformationUser\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js",["192","193","194","195","196","197","198","199","200","201","202","203"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport moment from 'moment';\r\nimport {Skeleton,Form,Input,List,DatePicker,InputNumber,Button,message} from 'antd';\r\nimport axios from 'axios'\r\nimport './commons.css'\r\nimport ReactPlayer from 'react-player/youtube'\r\nconst { TextArea } = Input;\r\n\r\nfunction InformationMovie(props) {\r\n    const {data,soureFetch} = props\r\n    const token = useSelector(state => state.token)\r\n    const [movie, setmovie] = useState()\r\n    const dateFormat = 'YYYY/MM/DD';\r\n\r\n    useEffect(() => {\r\n        if(soureFetch === 'themoviedb') fetcMoviesThemoviedb(data)\r\n    }, [data])\r\n\r\n\r\n    const fetcMoviesThemoviedb = async(data) => {\r\n        try {\r\n            const res = await axios.post('/movie/themoviedbdetail',{id:data})\r\n            setmovie(res.data.movie)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n       \r\n    }\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 14 },\r\n      };\r\n    \r\n    const uploadButton = (\r\n        <div>\r\n          <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    const Loading = (\r\n        <div>\r\n            <Skeleton.Image active={true} /> \r\n            <Skeleton active={true}/> \r\n        </div>\r\n    );\r\n    \r\n    const onFinish = async(e) =>{\r\n        try{\r\n            const res = await axios.post('/movie/addmovie/',{movie:e},\r\n                {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n\r\n    if(soureFetch === 'new'){\r\n        return (\r\n            <div>   \r\n                {Loading}        \r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div> \r\n            {movie?\r\n                <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            ['run-time']: movie.runtime?movie.runtime:1,\r\n                            ['original_title']:movie.original_title,\r\n                            ['title']:movie.title,\r\n                            ['overview']:movie.overview,\r\n                            ['release_date']:moment(movie.release_date,dateFormat),\r\n                            ['backdrop_path']:movie.backdrop_path,\r\n                            ['poster_path']:movie.poster_path,\r\n                            ['directors']:movie.directors,\r\n                            ['actors']:movie.actors,\r\n                            ['trailer']:movie.trailer,\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run-time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"directors\" label=\"Directors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                            size=\"small\"\r\n                            bordered\r\n                            dataSource={movie.directors}\r\n                            renderItem={item => <List.Item>{item}</List.Item>}\r\n                            />\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item name=\"actors\" label=\"Actors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                                size=\"small\"\r\n                                bordered\r\n                                dataSource={movie.actors}\r\n                                renderItem={item => <List.Item>{item}</List.Item>}\r\n                                />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img alt='' src = {movie.poster_path?movie.poster_path:null} style={{height:'300px'}}/>\r\n                                <input type='file' name='file' id='file_up'/>\r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <ReactPlayer width=\"100%\" height=\"100%\" url={movie.trailer} />\r\n                            </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img alt='' src = {movie.backdrop_path?movie.backdrop_path:null} style={{width:'100%'}}/>\r\n                            <input type='file' name='file' id='file_up'/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n                </div>\r\n                :<div>{Loading}</div>\r\n            }\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InformationMovie\r\n","D:\\testgit\\framework_client-server\\client\\src\\Config.js",[],["204","205"],"D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js",["206","207"],"import React,{useState} from 'react'\r\nimport {Button,Modal} from 'antd';\r\nimport InformationMovie from './InformationMovie'\r\n\r\nfunction MovieCard(props) {\r\n    \r\n    const {movie,soureFetch} = props\r\n    const [visible, setvisible] = useState(false)\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    return (\r\n        <div className='search-detail'>\r\n            <img src={movie.poster_path} onClick={handleAdd}/>\r\n            <Modal\r\n                height='70%'\r\n                width=\"80%\"\r\n                title=\"Add new movies\"\r\n                placement=\"top\"\r\n                visible={visible}\r\n                title=\"Information Movie\"\r\n                closable={false}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={()=>{setvisible (false)}}>\r\n                      Close\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                <InformationMovie soureFetch = {soureFetch} data = {movie.id}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\AdminPage\\Body\\Movie.js",["208","209","210","211","212"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Drawer,Table,Modal,message,Input} from 'antd';\r\nimport AddNewMovie from './commons/AddNewMovie'\r\nimport {useSelector} from 'react-redux'\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport Information from './commons/InformationUser'\r\n\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    original_title:'',\r\n    overview:'',\r\n    poster_path:'',\r\n    backdrop_path:'',\r\n    _id:'',\r\n    directors:'',\r\n    actors:'',\r\n}\r\n\r\nfunction Movie() {\r\n    \r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [moviesView, setmoviesViewView] = useState([])\r\n    const [movieinfor, setmovieinfor] = useState(initialState)\r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          title: '_Id',\r\n          dataIndex: '_id',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'title',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                     <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n\r\n    useEffect(() => {\r\n        movies_eff()\r\n    }, [Movies])\r\n\r\n    const movies_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/movie/getallmovie', {headers:{Authorization:token}})\r\n            setMovies(res.data.movie)\r\n            setmoviesViewView(Movies);\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/movie/delete/${movieinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + movieinfor.original_title, 0);\r\n            setTimeout(hide, 2500);\r\n            movies_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        var count=[];\r\n        Movies.forEach(element => {\r\n            if(element.title.toLowerCase().search(str) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        if(count==0)\r\n            setmoviesViewView(Movies);\r\n            if(count!=0) {\r\n                setmoviesViewView(count);\r\n            }\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='admin-movies'>\r\n           <h2><Text underline>Movies Manager</Text></h2>\r\n           <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n           <Table columns={columns} dataSource={moviesView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                    onClick: event => {setmovieinfor(moviesView[rowIndex])}, // click row\r\n                    onContextMenu: event => {}, // right button click row\r\n                };\r\n              }}\r\n            />\r\n           <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information movie infor ={movieinfor}/>\r\n            </Drawer>\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                <p>Delete Movie?</p>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","D:\\testgit\\framework_client-server\\client\\src\\components\\UserPage\\LandingPage\\Body.js",["213"],"import React from 'react'\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux'\r\n\r\n// pages for this product\r\nimport Register from '../../auth/Register';\r\nimport ActiveEmail from '../../auth/ActiveEmail';\r\nimport ForgotPw from '../../auth/ForgotPw';\r\nimport ResetPassword from '../../auth/ResetPassword'\r\nimport Notfound from '../../utils/Notfound'\r\nimport Profile from '../View/Profile'\r\nimport Successfully from '../../utils/Successfully'\r\nimport Test from '../View/Test'\r\nimport FreeMovies from '../View/FreeMovies/FreeMovies'\r\nimport WhatMovie from '../View/FreeMovies/WatchMovie'\r\nimport InTheatersPage from '../View/InTheater/InTheatersPage'\r\nimport InTheatersDetail from '../View/InTheater/InTheatersDetail'\r\n\r\n\r\n\r\n\r\n\r\nfunction Body() {\r\n    //const\r\n    const auth = useSelector(state => state.auth)\r\n    const {isLogged} = auth\r\n\r\n    //render\r\n    return (\r\n        <div className='body'>\r\n            <section>\r\n                <Switch>\r\n\r\n                    {/* must login first */}\r\n                    <Route exact path=\"/register\" component={isLogged? Notfound: Register}/>\r\n                    <Route exact path=\"/forgot\" component={isLogged? Notfound:ForgotPw}/>\r\n                    <Route exact path=\"/user/reset/:token\" component={isLogged? Notfound:ResetPassword}/>\r\n                    <Route exact path=\"/profile\" component={isLogged? Profile : Notfound}/>\r\n                    <Route exact path=\"/favorite\" component={isLogged? Profile : Notfound}/>\r\n\r\n                    {/* notification */}\r\n                    <Route exact path=\"/success/:title/:subTitle\" component={Successfully}/>\r\n\r\n                    {/* no need to login */}\r\n                    <Route exact path=\"/user/activation/:activation_token\" component={ActiveEmail}/>\r\n                    <Route exact path=\"/test\" component={Test}/>\r\n                    <Route exact path=\"/freemovies/:category\" component={FreeMovies}/>\r\n                    <Route exact path=\"/whatmovie/:nameMovie/:episode\" component={WhatMovie}/>\r\n                    <Route exact path=\"/intheaters/:query\" component={InTheatersPage}/>\r\n                    <Route exact path=\"/intheaters/detail/:nameMovie\" component={InTheatersDetail}/>\r\n                    \r\n                </Switch>\r\n            </section>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n",{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":39,"column":3,"nodeType":"220","endLine":39,"endColumn":13,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":43,"column":3,"nodeType":"220","endLine":43,"endColumn":10,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":51,"column":3,"nodeType":"220","endLine":51,"endColumn":12,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":5,"column":9,"nodeType":"228","messageId":"229","endLine":5,"endColumn":19},{"ruleId":"226","severity":1,"message":"230","line":4,"column":11,"nodeType":"228","messageId":"229","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"231","line":4,"column":54,"nodeType":"228","messageId":"229","endLine":4,"endColumn":60},{"ruleId":"226","severity":1,"message":"232","line":5,"column":50,"nodeType":"228","messageId":"229","endLine":5,"endColumn":64},{"ruleId":"233","severity":1,"message":"234","line":50,"column":66,"nodeType":"235","messageId":"236","endLine":50,"endColumn":68},{"ruleId":"233","severity":1,"message":"234","line":50,"column":126,"nodeType":"235","messageId":"236","endLine":50,"endColumn":128},{"ruleId":"233","severity":1,"message":"237","line":54,"column":17,"nodeType":"235","messageId":"236","endLine":54,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":56,"column":21,"nodeType":"235","messageId":"236","endLine":56,"endColumn":23},{"ruleId":"218","severity":1,"message":"238","line":95,"column":9,"nodeType":"220","endLine":95,"endColumn":31,"suggestions":"239"},{"ruleId":"226","severity":1,"message":"230","line":4,"column":11,"nodeType":"228","messageId":"229","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"230","line":7,"column":11,"nodeType":"228","messageId":"229","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"240","line":2,"column":37,"nodeType":"228","messageId":"229","endLine":2,"endColumn":51},{"ruleId":"226","severity":1,"message":"241","line":2,"column":52,"nodeType":"228","messageId":"229","endLine":2,"endColumn":63},{"ruleId":"242","severity":1,"message":"243","line":117,"column":17,"nodeType":"244","endLine":117,"endColumn":42},{"ruleId":"245","severity":1,"message":"246","line":40,"column":12,"nodeType":"247","endLine":40,"endColumn":84},{"ruleId":"218","severity":1,"message":"248","line":18,"column":8,"nodeType":"220","endLine":18,"endColumn":14,"suggestions":"249"},{"ruleId":"226","severity":1,"message":"250","line":36,"column":11,"nodeType":"228","messageId":"229","endLine":36,"endColumn":23},{"ruleId":"251","severity":1,"message":"252","line":77,"column":29,"nodeType":"253","messageId":"254","endLine":77,"endColumn":72,"fix":"255"},{"ruleId":"251","severity":1,"message":"256","line":78,"column":29,"nodeType":"253","messageId":"254","endLine":78,"endColumn":68,"fix":"257"},{"ruleId":"251","severity":1,"message":"258","line":79,"column":29,"nodeType":"253","messageId":"254","endLine":79,"endColumn":50,"fix":"259"},{"ruleId":"251","severity":1,"message":"260","line":80,"column":29,"nodeType":"253","messageId":"254","endLine":80,"endColumn":56,"fix":"261"},{"ruleId":"251","severity":1,"message":"262","line":81,"column":29,"nodeType":"253","messageId":"254","endLine":81,"endColumn":83,"fix":"263"},{"ruleId":"251","severity":1,"message":"264","line":82,"column":29,"nodeType":"253","messageId":"254","endLine":82,"endColumn":66,"fix":"265"},{"ruleId":"251","severity":1,"message":"266","line":83,"column":29,"nodeType":"253","messageId":"254","endLine":83,"endColumn":62,"fix":"267"},{"ruleId":"251","severity":1,"message":"268","line":84,"column":29,"nodeType":"253","messageId":"254","endLine":84,"endColumn":58,"fix":"269"},{"ruleId":"251","severity":1,"message":"270","line":85,"column":29,"nodeType":"253","messageId":"254","endLine":85,"endColumn":52,"fix":"271"},{"ruleId":"251","severity":1,"message":"272","line":86,"column":29,"nodeType":"253","messageId":"254","endLine":86,"endColumn":54,"fix":"273"},{"ruleId":"214","replacedBy":"274"},{"ruleId":"216","replacedBy":"275"},{"ruleId":"245","severity":1,"message":"246","line":15,"column":13,"nodeType":"247","endLine":15,"endColumn":63},{"ruleId":"242","severity":1,"message":"243","line":22,"column":17,"nodeType":"244","endLine":22,"endColumn":42},{"ruleId":"226","severity":1,"message":"276","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":19},{"ruleId":"218","severity":1,"message":"277","line":56,"column":8,"nodeType":"220","endLine":56,"endColumn":16,"suggestions":"278"},{"ruleId":"233","severity":1,"message":"234","line":93,"column":56,"nodeType":"235","messageId":"236","endLine":93,"endColumn":58},{"ruleId":"233","severity":1,"message":"237","line":97,"column":17,"nodeType":"235","messageId":"236","endLine":97,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":99,"column":21,"nodeType":"235","messageId":"236","endLine":99,"endColumn":23},{"ruleId":"218","severity":1,"message":"224","line":39,"column":9,"nodeType":"220","endLine":39,"endColumn":18,"suggestions":"279"},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["282"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.",["284"],"no-unused-vars","'UpOutlined' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","'Button' is defined but never used.","'SearchOutlined' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'userView'. Either include it or remove the dependency array.",["285"],"'IMAGE_BASE_URL' is defined but never used.","'POSTER_SIZE' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'soureFetch'. Either include it or remove the dependency array.",["286"],"'uploadButton' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['run-time'] found.","Property","unnecessarilyComputedProperty",{"range":"287","text":"288"},"Unnecessarily computed property ['original_title'] found.",{"range":"289","text":"290"},"Unnecessarily computed property ['title'] found.",{"range":"291","text":"292"},"Unnecessarily computed property ['overview'] found.",{"range":"293","text":"294"},"Unnecessarily computed property ['release_date'] found.",{"range":"295","text":"296"},"Unnecessarily computed property ['backdrop_path'] found.",{"range":"297","text":"298"},"Unnecessarily computed property ['poster_path'] found.",{"range":"299","text":"300"},"Unnecessarily computed property ['directors'] found.",{"range":"301","text":"302"},"Unnecessarily computed property ['actors'] found.",{"range":"303","text":"304"},"Unnecessarily computed property ['trailer'] found.",{"range":"305","text":"306"},["280"],["281"],"'AddNewMovie' is defined but never used.","React Hook useEffect has a missing dependency: 'movies_eff'. Either include it or remove the dependency array.",["307"],["308"],"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},[2112,2124],"'run-time'",[2186,2204],"'original_title'",[2256,2265],"'title'",[2308,2320],"'overview'",[2366,2382],"'release_date'",[2451,2468],"'backdrop_path'",[2519,2534],"'poster_path'",[2583,2596],"'directors'",[2643,2653],"'actors'",[2697,2708],"'trailer'",{"desc":"319","fix":"320"},{"desc":"313","fix":"321"},"Update the dependencies array to be: [dispatch, getToken, isLogged]",{"range":"322","text":"323"},"Update the dependencies array to be: [getUser, token]",{"range":"324","text":"325"},"Update the dependencies array to be: [auth, dispatch, isAdmin, token]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, token, userView, users]",{"range":"328","text":"329"},"Update the dependencies array to be: [data, soureFetch]",{"range":"330","text":"331"},"Update the dependencies array to be: [Movies, movies_eff]",{"range":"332","text":"333"},{"range":"334","text":"327"},[1157,1167],"[dispatch, getToken, isLogged]",[1214,1221],"[getUser, token]",[1359,1368],"[auth, dispatch, isAdmin, token]",[2791,2813],"[dispatch, token, userView, users]",[641,647],"[data, soureFetch]",[1552,1560],"[Movies, movies_eff]",[1311,1320]]